{"ast":null,"code":"import axios from 'axios';\nimport React__default, { forwardRef, useImperativeHandle, useState, useRef, useCallback, useEffect, createElement } from 'react';\nimport { AnimateSharedLayout, AnimatePresence, motion } from 'framer-motion';\nimport { ZoomIn, ZoomOut, Download, FullscreenExit, Fullscreen, GridFill, Search, PauseCircleFill, PlayCircleFill, XLg } from 'react-bootstrap-icons';\nimport Magnifier from 'react-magnifier';\nimport { Portal } from 'react-portal';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport { saveAs } from 'file-saver';\nimport Div100vh from 'react-div-100vh';\nimport KeyHandler from 'react-key-handler';\nimport { useInterval } from 'usehooks-ts';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport YouTube from 'react-youtube';\nimport useResizeObserver from '@react-hook/resize-observer';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar styles = {\n  \"lightboxjs\": \"_30i9K\",\n  \"slideshowContainer\": \"_3kSzL\",\n  \"slideshowBtn\": \"_tCjNO\",\n  \"closeIcon\": \"_2IJEr\",\n  \"iconsHeader\": \"_2Yv4j\",\n  \"prev1\": \"_1lgEi\",\n  \"next1\": \"_DDceb\",\n  \"icon\": \"_2Vept\",\n  \"prevIcon\": \"_2gxOL\",\n  \"nextIcon\": \"_3gp2w\",\n  \"show\": \"_2crlL\",\n  \"displayHidden\": \"_34QvR\",\n  \"thumbnail\": \"_1R214\",\n  \"hoverShadow\": \"_3EuZy\",\n  \"thumbnails\": \"_3pfLz\",\n  \"thumbnailsWithCaption\": \"_Fp_rP\",\n  \"imageSlide\": \"_22ETc\",\n  \"thumbnailsOuterContainer\": \"_-wN_b\",\n  \"videoThumbnailsOuterContainer\": \"_KbOLW\",\n  \"imgTitleContainer\": \"_1j-pZ\",\n  \"thumbnailsAndCaption\": \"_1nxK_\",\n  \"htmlVideoOuterContainer\": \"_z-jNd\",\n  \"caption\": \"_2jJU2\",\n  \"galleryImg\": \"_lY1R_\",\n  \"slideshowAnimContainer\": \"_wTR3b\",\n  \"fullScreenContainer\": \"_11N04\",\n  \"imageInnerContainer\": \"_20Hp6\",\n  \"magnifyWrapper\": \"_3PObS\",\n  \"slideshowInnerContainer\": \"_1JRT_\",\n  \"slideshowInnerVideoContainer\": \"_1ni2w\",\n  \"slideshowInnerContainerThumbnails\": \"_GV0NM\",\n  \"lightboxContainer\": \"_3BNPD\",\n  \"slideshowAnimImg\": \"_j1nqC\",\n  \"controls\": \"_ABXHD\",\n  \"ytVideo\": \"_2eq8V\",\n  \"videoOuterContainer\": \"_1P3Wc\",\n  \"videoIconsHeader\": \"_qtY0U\",\n  \"lightbox\": \"_3cxVN\",\n  \"imgTitle\": \"_2pA2G\",\n  \"lightbox_img\": \"_3A0RO\",\n  \"slideshow_img_fullscreen\": \"_2yYOi\",\n  \"slideshowInnerContainerFullScreen\": \"_hWNoE\",\n  \"fullScreenLightboxImg\": \"_1ek8k\",\n  \"opacity-fade\": \"_2P48G\",\n  \"imageSliderThumbnails\": \"_1xBL9\",\n  \"slideshow_img\": \"_1yWyS\",\n  \"light_icon\": \"_1kIQ4\",\n  \"dark_icon\": \"_1qbJe\",\n  \"light_header_icon\": \"_3DIHj\",\n  \"dark_header_icon\": \"_11aT5\",\n  \"magnifier-image\": \"_mdJQi\",\n  \"active\": \"_3sodH\",\n  \"inactiveThumbnailBorder\": \"_3bkUp\",\n  \"embla_thumbs\": \"_32vVi\",\n  \"htmlVideo\": \"_sqvn-\",\n  \"react-transform-component\": \"_3Id1-\",\n  \"loader\": \"_3qqrl\",\n  \"rotation\": \"_1hUzk\",\n  \"day_loader\": \"_1itZw\",\n  \"night_loader\": \"_2TI_i\",\n  \"closeButton\": \"_2kumA\",\n  \"slideImageAndCaption\": \"_238y5\",\n  \"roundedBorder\": \"_2FvXV\",\n  \"maxWidthFull\": \"_oa5b0\",\n  \"maxWidthWithoutMagnifier\": \"_z-bHV\",\n  \"lightboxVideo\": \"_hGbhv\",\n  \"navigation-wrapper\": \"_1dVqh\",\n  \"dots\": \"_3MuXE\",\n  \"dot\": \"_3U2py\",\n  \"arrow\": \"_35l6Q\",\n  \"leftArrow\": \"_1I4Zg\",\n  \"rightArrow\": \"_1lqBv\",\n  \"arrow--disabled\": \"_37Xda\",\n  \"navDotsMargin\": \"_1LtID\",\n  \"inactiveThumbnailBorderImgSlider\": \"_2y9OU\",\n  \"ytVideoImgSlider\": \"_2oAIc\",\n  \"outerYTVideoImgSlider\": \"_2-c5L\",\n  \"imgSliderArrow\": \"_1Bey-\",\n  \"cursorPointer\": \"_3xuz3\",\n  \"lightboxjs_icon\": \"_1fpgA\",\n  \"embla\": \"_1cifY\",\n  \"embla__viewport\": \"_1mBUR\",\n  \"embla__container\": \"_Bqct9\",\n  \"embla__slide\": \"_1eJNe\",\n  \"embla_thumbs__viewport\": \"_1tmVU\",\n  \"embla_thumbs__container\": \"_3-Y1e\",\n  \"embla_thumbs__slide\": \"_jp0uN\",\n  \"embla_thumbs__slide__img\": \"_3S-ie\",\n  \"mlAuto\": \"_1afvv\"\n};\nvar wrapNums = function wrapNums(minNum, maxNum, v) {\n  var rangeSize = maxNum - minNum;\n  return ((v - minNum) % rangeSize + rangeSize) % rangeSize + minNum;\n};\nvar shouldAutoplay = function shouldAutoplay(elem) {\n  if (elem.type == 'yt' && elem.autoPlay != true && elem.autoPlay != 'true') {\n    return false;\n  } else if (elem.autoPlay == false || elem.autoPlay == 'false') {\n    return false;\n  }\n  return true;\n};\nvar getVideoHeight = function getVideoHeight(elem) {\n  if (elem.videoHeight) {\n    return elem.videoHeight;\n  }\n  return \"200\";\n};\nvar getVideoWidth = function getVideoWidth(elem) {\n  if (elem.videoWidth) {\n    return elem.videoWidth;\n  }\n  return \"900\";\n};\nvar thumbnailVariants = {\n  visible: {\n    opacity: 1,\n    y: 0\n  },\n  hidden: {\n    opacity: 0,\n    y: 100\n  }\n};\nvar themes = {\n  day: {\n    background: 'white',\n    iconColor: 'black',\n    thumbnailBorder: 'solid transparent 2px',\n    textColor: 'black'\n  },\n  night: {\n    background: '#151515',\n    iconColor: '#626b77',\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\n    textColor: '#626b77'\n  },\n  lightbox: {\n    background: 'rgba(12, 12, 12, 0.93)',\n    iconColor: '#626b77',\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\n    textColor: 'silver'\n  }\n};\nvar inactiveThumbnailBorder = 'solid transparent 2px';\nvar defaultTheme = 'night';\nvar mobileWidth = 768;\nvar SlideshowLightbox = forwardRef(function (props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      reset: function reset() {\n        initImages(true, true);\n      }\n    };\n  });\n  var createCustomThumbnailBorder = function createCustomThumbnailBorder() {\n    if (props.thumbnailBorder) {\n      return \"solid \" + props.thumbnailBorder + \" 2px\";\n    }\n  };\n  var _useState = useState([0, 0]),\n    _useState$ = _useState[0],\n    imgSlideIndex = _useState$[0],\n    direction = _useState$[1],\n    setImgSlideIndex = _useState[1];\n  var _useState2 = useState(false),\n    showModal = _useState2[0],\n    setShowModal = _useState2[1];\n  var _useState3 = useState(false),\n    isSlideshowPlaying = _useState3[0],\n    setIsSlideshowPlaying = _useState3[1];\n  var _useState4 = useState(false),\n    emblaReinitialized = _useState4[0],\n    setEmblaReinitialized = _useState4[1];\n  var _useState5 = useState([]),\n    images = _useState5[0],\n    setImages = _useState5[1];\n  var _useState6 = useState([]),\n    previewImageElems = _useState6[0],\n    setPreviewImageElems = _useState6[1];\n  var slideIndex = wrapNums(0, images.length, imgSlideIndex);\n  var _useState7 = useState({\n      loop: true,\n      startIndex: 0,\n      active: true\n    }),\n    reactSwipeOptions = _useState7[0],\n    setReactSwipeOptions = _useState7[1];\n  var initialThumbnailOptions = {\n    startIndex: 0,\n    containScroll: 'keepSnaps',\n    dragFree: true\n  };\n  var _useState8 = useState(initialThumbnailOptions),\n    thumbnailSwipeOptions = _useState8[0],\n    setThumbnailSwipeOptions = _useState8[1];\n  var _useState9 = useState(false),\n    carouselReady = _useState9[0],\n    setCarouselReady = _useState9[1];\n  var _useState10 = useState(false),\n    zoomedIn = _useState10[0],\n    setZoomedIn = _useState10[1];\n  var _useState11 = useState(false),\n    isOpen = _useState11[0],\n    setIsOpen = _useState11[1];\n  var _useState12 = useState(null),\n    prevFocusedElem = _useState12[0],\n    setPrevFocusedElem = _useState12[1];\n  var _useState13 = useState(false),\n    animationEntered = _useState13[0],\n    setAnimationEntered = _useState13[1];\n  var _useState14 = useState(props.magnifyingGlass ? props.magnifyingGlass : false),\n    magnifyingGlassFeature = _useState14[0];\n  var _useState15 = useState(props.disableImageZoom ? props.disableImageZoom : false),\n    disableZoom = _useState15[0],\n    setDisableZoom = _useState15[1];\n  var _useState16 = useState(props.slideshowInterval ? props.slideshowInterval : 1700),\n    slideshowInterval = _useState16[0];\n  var _useState17 = useState(props.rightArrowStyle ? props.rightArrowStyle : {}),\n    rightArrowStyle = _useState17[0];\n  var _useState18 = useState(props.leftArrowStyle ? props.leftArrowStyle : {}),\n    leftArrowStyle = _useState18[0];\n  var _useState19 = useState(props.roundedImages ? props.roundedImages : false),\n    isRounded = _useState19[0],\n    setIsRounded = _useState19[1];\n  var _useState20 = useState(props.showControls ? props.showControls : true),\n    showControls = _useState20[0],\n    setShowControls = _useState20[1];\n  var _useState21 = useState(props.showFullScreenIcon ? props.showFullScreenIcon : true),\n    displayFullScreenIcon = _useState21[0],\n    setDisplayFullScreenIcon = _useState21[1];\n  var _useState22 = useState(props.showThumbnailIcon ? props.showThumbnailIcon : true),\n    displayThumbnailIcon = _useState22[0],\n    setDisplayThumbnailIcon = _useState22[1];\n  var _useState23 = useState(props.showSlideshowIcon ? props.showSlideshowIcon : true),\n    setDisplaySlideshowIcon = _useState23[1];\n  var _useState24 = useState(props.showMagnificationIcons ? props.showMagnificationIcons : true),\n    displayMagnificationIcons = _useState24[0],\n    setDisplayMagnificationIcons = _useState24[1];\n  var _useState25 = useState(props.nextArrow ? props.nextArrow : null),\n    nextArrowElem = _useState25[0];\n  var _useState26 = useState(props.imageComponent ? props.imageComponent : null),\n    isImageComponent = _useState26[0];\n  var _useState27 = useState(props.prevArrow ? props.prevArrow : null),\n    prevArrowElem = _useState27[0];\n  var _useState28 = useState(props.modalClose ? props.modalClose : \"default\"),\n    modalCloseOption = _useState28[0];\n  var _useState29 = useState(props.downloadImages ? props.downloadImages : false),\n    showDownloadBtn = _useState29[0];\n  var _useState30 = useState(props.rtl ? props.rtl : false),\n    isRTL = _useState30[0];\n  var _useState31 = useState(props.framework ? props.framework : ''),\n    frameworkID = _useState31[0];\n  var _useState32 = useState(props.lightboxIdentifier ? props.lightboxIdentifier : false),\n    lightboxIdentifier = _useState32[0];\n  var _useState33 = useState(props.fullScreen ? props.fullScreen : false),\n    imageFullScreen = _useState33[0];\n  var _useState34 = useState(props.licenseKey ? props.licenseKey : '');\n  var _useState35 = useState(props.showLoader ? props.showLoader : false),\n    displayLoader = _useState35[0],\n    setDisplayLoader = _useState35[1];\n  var _useState36 = useState(props.backgroundColor ? props.backgroundColor : themes[defaultTheme].background),\n    backgroundColor = _useState36[0],\n    setBackgroundColor = _useState36[1];\n  var _useState37 = useState(props.iconColor ? props.iconColor : null),\n    iconColor = _useState37[0],\n    setIconColor = _useState37[1];\n  var _useState38 = useState(props.textColor ? props.textColor : themes[defaultTheme].textColor),\n    textColor = _useState38[0],\n    setTextColor = _useState38[1];\n  var _useState39 = useState(props.useCoverMode ? props.useCoverMode : false),\n    coverMode = _useState39[0];\n  var _useState40 = useState(props.thumbnailBorder ? createCustomThumbnailBorder() : themes[defaultTheme].thumbnailBorder),\n    thumbnailBorder = _useState40[0];\n  var _useState41 = useState(props.showThumbnails ? props.showThumbnails : false),\n    showThumbnails = _useState41[0],\n    setShowThumbnails = _useState41[1];\n  var _useState42 = useState(props.animateThumbnails ? props.animateThumbnails : true),\n    animatedThumbnails = _useState42[0];\n  var _useState43 = useState(props.imgAnimation ? props.imgAnimation : 'imgDrag'),\n    setImgAnimation = _useState43[1];\n  var _useState44 = useState(props.arrowStyle ? props.arrowStyle : 'dark'),\n    arrowStyle = _useState44[0];\n  var _useState45 = useState(false),\n    setYTVideoCurrentlyPlaying = _useState45[1];\n  var _useState46 = useState(0),\n    width = _useState46[0],\n    setWidth = _useState46[1];\n  var _useState47 = useState(false),\n    isBrowserFullScreen = _useState47[0],\n    setIsBrowserFullScreen = _useState47[1];\n  var _useState48 = useState(false),\n    enableMagnifyingGlass = _useState48[0],\n    setMagnifyingGlass = _useState48[1];\n  var _useState49 = useState(false),\n    imagesLoaded = _useState49[0],\n    setImagesLoaded = _useState49[1];\n  var imageRef = useRef(null);\n  var _useState50 = useState(0),\n    zoomIdx = _useState50[0],\n    setZoomIdx = _useState50[1];\n  var _useState51 = useState(500),\n    imgContainHeight = _useState51[0],\n    setImgContainHeight = _useState51[1];\n  var _useState52 = useState(426),\n    imgContainWidth = _useState52[0],\n    setImgContainWidth = _useState52[1];\n  var _useState53 = useState(false),\n    isInit = _useState53[0],\n    setIsInit = _useState53[1];\n  var zoomReferences = useRef([]);\n  var videoReferences = useRef({});\n  var btnRef = useRef(null);\n  var _useState54 = useState({}),\n    videoElements = _useState54[0],\n    setVideoElements = _useState54[1];\n  var isMobile = width <= mobileWidth;\n  var getLoaderThemeClass = function getLoaderThemeClass() {\n    if (props.theme) {\n      if (props.theme == 'night' || props.theme == 'lightbox') {\n        return styles.night_loader;\n      } else if (props.theme == 'day') {\n        return styles.day_loader;\n      }\n    }\n    return styles.night_loader;\n  };\n  var _useEmblaCarousel = useEmblaCarousel(reactSwipeOptions),\n    emblaRef = _useEmblaCarousel[0],\n    emblaApi = _useEmblaCarousel[1];\n  var _useEmblaCarousel2 = useEmblaCarousel(thumbnailSwipeOptions),\n    emblaThumbsRef = _useEmblaCarousel2[0],\n    emblaThumbsApi = _useEmblaCarousel2[1];\n  var scrollPrev = useCallback(function () {\n    if (emblaApi) {\n      emblaApi.scrollPrev();\n    }\n  }, [emblaApi]);\n  var scrollNext = useCallback(function () {\n    if (emblaApi) emblaApi.scrollNext();\n  }, [emblaApi]);\n  var variants = {\n    active: {\n      opacity: 1\n    },\n    inactive: {\n      opacity: 0\n    }\n  };\n  var isImageCaption = function isImageCaption() {\n    if (props.images && props.images[slideIndex].caption) {\n      return true;\n    }\n    return false;\n  };\n  var displayDownloadBtn = function displayDownloadBtn() {\n    if (isVideo(slideIndex)) {\n      return false;\n    } else {\n      return showDownloadBtn;\n    }\n  };\n  function handleWindowResize() {\n    setWidth(window.innerWidth);\n  }\n  var shouldDisplayMagnifyingGlassIcon = function shouldDisplayMagnifyingGlassIcon() {\n    if (isVideo(slideIndex)) {\n      return false;\n    }\n    if (isMobile == true) {\n      return false;\n    }\n    if (imageFullScreen == true) {\n      return false;\n    }\n    if (magnifyingGlassFeature == true) {\n      return true;\n    }\n    return false;\n  };\n  var getImageStyle = function getImageStyle() {\n    var styleObject = {};\n    if (isRounded) {\n      styleObject[\"borderRadius\"] = \"20px\";\n    }\n    if (modalCloseOption == \"clickOutside\") {\n      styleObject[\"pointerEvents\"] = \"auto\";\n    }\n    if (isImageComponent && showThumbnails == false && !isMobile) {\n      styleObject[\"height\"] = \"85vh\";\n    }\n    return styleObject;\n  };\n  var shouldDisplaySlideshowIcon = function shouldDisplaySlideshowIcon() {\n    if (props.showSlideshowIcon != undefined) {\n      return props.showSlideshowIcon;\n    }\n    if (images) {\n      if (images.length == 1) {\n        return false;\n      }\n    } else if (props.images) {\n      if (props.images.length == 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var thumbnailClick = function thumbnailClick(index) {\n    initLoader(index);\n    setCurrentSlide(index);\n  };\n  var checkModalClick = function checkModalClick(e) {\n    var modals = document.getElementsByClassName('imageModal');\n    var arr_modals = Array.from(modals);\n    for (var i = 0; i < arr_modals.length; i++) {\n      var elem = arr_modals[i];\n      var clickInside = elem.contains(e.target);\n      if (clickInside) {\n        return;\n      }\n    }\n    closeModal();\n  };\n  var getRTLIndex = function getRTLIndex(img_gallery_length, i) {\n    var index;\n    if (i == 0) {\n      index = img_gallery_length - 1;\n    } else if (i == img_gallery_length - 1) {\n      index = 0;\n    } else {\n      index = img_gallery_length - i - 1;\n    }\n    return index;\n  };\n  var fullScreen = function fullScreen() {\n    var lightbox = document.getElementById('slideshowAnim');\n    openFullScreen(lightbox);\n    setIsBrowserFullScreen(true);\n    initFullScreenChangeEventListeners();\n  };\n  var exitFullScreenHandler = function exitFullScreenHandler() {\n    if (document['webkitIsFullScreen'] || document['mozFullScreen'] || document['msFullscreenElement']) {\n      setIsBrowserFullScreen(true);\n    } else {\n      if (isBrowserFullScreen) {\n        closeFullScreen(document);\n      }\n      removeFullScreenChangeEventListeners();\n      setIsBrowserFullScreen(false);\n    }\n  };\n  var exitFullScreen = function exitFullScreen() {\n    closeFullScreen(document);\n    removeFullScreenChangeEventListeners();\n    setIsBrowserFullScreen(false);\n  };\n  var updateImageSlideshow = function updateImageSlideshow(newDirection) {\n    if (isRTL) {\n      scrollPrev();\n    } else {\n      scrollNext();\n    }\n    setImgSlideIndex([imgSlideIndex + newDirection, newDirection]);\n    if (isRTL) {\n      setZoomIdx(zoomIdx - 1 < 0 ? images.length - 1 : zoomIdx - 1);\n    } else {\n      setZoomIdx(zoomIdx + 1 >= images.length ? 0 : zoomIdx + 1);\n    }\n  };\n  var displayArrows = function displayArrows() {\n    if (props.showArrows == false) {\n      return false;\n    } else if (images.length == 1) {\n      return false;\n    }\n    if (props.images) {\n      if (props.images.length == 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var initLoader = function initLoader(newIndex) {\n    if (props.showLoader && props.images) {\n      if (!isVideo(newIndex) && images[newIndex].loaded != true) {\n        setDisplayLoader(true);\n      } else if (props.showLoader && props.images && images[newIndex]['loaded']) {\n        setDisplayLoader(false);\n      }\n    }\n  };\n  var getImageCaption = function getImageCaption() {\n    if (props.images) {\n      return props.images[slideIndex].caption;\n    }\n    return \"\";\n  };\n  var getArrowStyle = function getArrowStyle() {\n    if (arrowStyle == 'dark') {\n      return styles.dark_icon;\n    } else if (arrowStyle == 'light') {\n      return styles.light_icon;\n    }\n  };\n  var getIconStyle = function getIconStyle() {\n    if (arrowStyle == 'dark') {\n      return styles.dark_header_icon;\n    } else if (arrowStyle == 'light') {\n      return styles.light_header_icon;\n    }\n  };\n  var setCurrentSlide = function setCurrentSlide(newIndex) {\n    var newDirection;\n    if (newIndex > imgSlideIndex) {\n      newDirection = 1;\n    } else {\n      newDirection = -1;\n    }\n    setZoomIdx(newIndex);\n    setImgSlideIndex([newIndex, newDirection]);\n    if (emblaApi) {\n      emblaApi.scrollTo(newIndex);\n    }\n  };\n  var dispatchOpenEvent = function dispatchOpenEvent() {\n    if (props.onOpen) {\n      props.onOpen(slideIndex, images[slideIndex]);\n    }\n  };\n  var dispatchCloseEvent = function dispatchCloseEvent() {\n    if (props.onClose) {\n      props.onClose(slideIndex);\n    }\n  };\n  var dispatchNextImgEvent = function dispatchNextImgEvent(newIndex) {\n    if (props.onNext) {\n      props.onNext(newIndex, images[newIndex]);\n    }\n  };\n  var dispatchPrevImgEvent = function dispatchPrevImgEvent(newIndex) {\n    if (props.onPrev) {\n      props.onPrev(newIndex, images[newIndex]);\n    }\n  };\n  var closeModal = function closeModal() {\n    setZoomIdx(0);\n    if (isBrowserFullScreen) {\n      exitFullScreen();\n    }\n    if (isSlideshowPlaying) {\n      setIsSlideshowPlaying(false);\n    }\n    setShowModal(false);\n    setIsOpen(false);\n    setCarouselReady(false);\n    setEmblaReinitialized(false);\n    if (prevFocusedElem) prevFocusedElem === null || prevFocusedElem === void 0 ? void 0 : prevFocusedElem.focus();\n  };\n  var openModal = function openModal(num) {\n    if (emblaApi) {\n      emblaApi.reInit();\n      if (emblaThumbsApi) {\n        emblaThumbsApi === null || emblaThumbsApi === void 0 ? void 0 : emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap());\n      }\n    }\n    setImgSlideIndex([num, 1]);\n    setShowModal(true);\n    setIsOpen(true);\n  };\n  var setItemLoaded = function setItemLoaded(index) {\n    if (props.images) {\n      setImages(function (images) {\n        return images.map(function (img, i) {\n          return index === i ? _extends({}, img, {\n            loaded: true\n          }) : img;\n        });\n      });\n    }\n  };\n  var setImagesItemLoaded = function setImagesItemLoaded(index) {\n    setImages(function (images) {\n      return images.map(function (img, i) {\n        return index === i ? _extends({}, img, {\n          loaded: true\n        }) : img;\n      });\n    });\n  };\n  var resetMedia = function resetMedia(slide_index) {\n    resetVideo(slide_index);\n    resetImage();\n  };\n  var initSlide = function initSlide(newSlideIndex) {\n    setImgSlideIndex([newSlideIndex, 1]);\n    var wrap_slide_index = wrapNums(0, images.length, newSlideIndex);\n    setZoomIdx(wrap_slide_index);\n    initLoader(wrap_slide_index);\n  };\n  var nextSlide = function nextSlide() {\n    scrollNext();\n    initSlide(imgSlideIndex + 1);\n  };\n  var prevSlide = function prevSlide() {\n    scrollPrev();\n    initSlide(imgSlideIndex - 1);\n  };\n  var setThumbnailStartIndex = function setThumbnailStartIndex(index) {\n    var thumbnailSwipeOptionConfig = thumbnailSwipeOptions;\n    thumbnailSwipeOptionConfig.startIndex = index;\n    setThumbnailSwipeOptions(thumbnailSwipeOptionConfig);\n  };\n  var openModalWithSlideNum = function openModalWithSlideNum(index) {\n    var reactSwipeOptionConfig = reactSwipeOptions;\n    reactSwipeOptionConfig.startIndex = index;\n    setReactSwipeOptions(reactSwipeOptionConfig);\n    setThumbnailStartIndex(index);\n    setZoomIdx(index);\n    openModal(index);\n  };\n  var saveImage = function saveImage() {\n    if (props.images.length > 0) {\n      if (props.images[slideIndex].original) {\n        saveAs(props.images[slideIndex].original, 'image.jpg');\n      } else {\n        saveAs(props.images[slideIndex]['src'], 'image.jpg');\n      }\n    } else {\n      if (images[slideIndex].src) {\n        saveAs(images[slideIndex].src, 'image.jpeg');\n      }\n    }\n  };\n  var playSlideshow = function playSlideshow() {\n    setMagnifyingGlass(false);\n    if (isRTL) {\n      updateImageSlideshow(-1);\n    } else {\n      updateImageSlideshow(1);\n    }\n    setIsSlideshowPlaying(true);\n  };\n  var stopSlideshow = function stopSlideshow() {\n    setIsSlideshowPlaying(false);\n  };\n  var resetVideo = function resetVideo(slide_index) {\n    if (props.images) {\n      var elem = props.images[slide_index];\n      if (elem) {\n        if (elem.type == 'htmlVideo') {\n          videoReferences.current[slide_index].pause();\n        } else if (elem.type == \"yt\") {\n          videoElements[slide_index].target.pauseVideo();\n        }\n      }\n    }\n  };\n  var getImageThumbnail = function getImageThumbnail(img, index, isNextJS) {\n    return createElement(\"div\", {\n      key: \"thumbnail_slide_\" + index,\n      className: \"\" + styles.embla_thumbs__slide\n    }, createElement(\"img\", {\n      className: styles.thumbnail + \" imageModal\",\n      src: isNextJS == true ? getThumbnailImgSrcNext(img, index) : getThumbnailImgSrc(img, index),\n      alt: img.alt,\n      onLoad: function onLoad() {\n        return setImagesLoaded(true);\n      },\n      style: slideIndex === index ? {\n        border: thumbnailBorder\n      } : {\n        border: inactiveThumbnailBorder\n      },\n      key: \"thumbnail_\" + index,\n      onClick: function onClick() {\n        thumbnailClick(index);\n      }\n    }));\n  };\n  var resetImage = function resetImage() {\n    if (enableMagnifyingGlass) {\n      initMagnifyingGlass();\n    } else {\n      if (zoomReferences.current[zoomIdx] != null) {\n        zoomReferences.current[zoomIdx].resetTransform();\n      }\n    }\n  };\n  var getThumbnailImgSrc = function getThumbnailImgSrc(img, index) {\n    if (isVideo(index) && img.thumbnail) {\n      return img.thumbnail;\n    } else {\n      return img.src;\n    }\n  };\n  var getThumbnailImgSrcNext = function getThumbnailImgSrcNext(img, index) {\n    if (isVideo(index)) {\n      return img.thumbnail;\n    } else {\n      var img_src = img.src;\n      if (typeof img_src === 'object' && !Array.isArray(img_src) && img_src !== null) {\n        return img_src.src;\n      } else {\n        return img_src;\n      }\n    }\n  };\n  var isAnimImageComponent = function isAnimImageComponent() {\n    if (images) {\n      if (images.length == 1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var initWrapperClassname = function initWrapperClassname() {\n    var classNameStr = \"\";\n    if (isAnimImageComponent()) {\n      if (props.imgWrapperClassName) {\n        classNameStr += props.imgWrapperClassName + \" \";\n      }\n    } else if (props.className) {\n      classNameStr += props.className + \" \";\n    }\n    classNameStr += \"\" + styles.lightboxjs;\n    return classNameStr;\n  };\n  var initStyling = function initStyling() {\n    if (props.theme) {\n      if (themes[props.theme]) {\n        setBackgroundColor(themes[props.theme].background);\n        setTextColor(themes[props.theme].textColor);\n      }\n    }\n    if (props.fullScreen) {\n      if (props.fullScreen == true) {\n        setImgAnimation('fade');\n        setIsRounded(false);\n      }\n    }\n  };\n  var imageSlideElement = function imageSlideElement(index) {\n    var imageElem;\n    if (!props.images) {\n      imageElem = createElement(\"img\", {\n        className: \"imageModal \" + styles.embla__slide__img + \"\\n        \" + (props.fullScreen ? styles.fullScreenLightboxImg : styles.lightbox_img) + \" \\n        \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \",\n        style: getImageStyle(),\n        ref: imageRef,\n        loading: 'lazy',\n        src: images[index].original ? images[index].original : images[index].src,\n        onLoad: function onLoad() {\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          if (props.images) {\n            setItemLoaded(index);\n          } else {\n            setImagesItemLoaded(index);\n          }\n        },\n        id: 'img'\n      });\n    } else if (props.images && props.render) {\n      imageElem = props.render.imgSlide(props.images[index]);\n    } else {\n      var img_link;\n      if (props.images) {\n        if (typeof images[index].src === 'object' && !Array.isArray(images[index].src) && images[index].src !== null) {\n          var _images$index$src;\n          img_link = (_images$index$src = images[index].src) === null || _images$index$src === void 0 ? void 0 : _images$index$src.src;\n        } else if (props.coverImageInLightbox == true) {\n          img_link = images[index].src;\n        } else {\n          img_link = images[index].src;\n        }\n      }\n      imageElem = createElement(\"img\", {\n        className: \"imageModal \" + styles.embla__slide__img + \"\\n        \" + (props.fullScreen ? styles.fullScreenLightboxImg : styles.lightbox_img) + \" \\n        \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \",\n        ref: imageRef,\n        loading: 'lazy',\n        style: getImageStyle(),\n        src: images[index].original ? images[index].original : img_link,\n        onLoad: function onLoad() {\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          if (props.images) {\n            setItemLoaded(index);\n          } else {\n            setImagesItemLoaded(index);\n          }\n        },\n        id: 'img'\n      });\n    }\n    return imageElem;\n  };\n  var isPanningDisabled = function isPanningDisabled() {\n    if (isMobile && zoomedIn == false) {\n      return true;\n    }\n    if (isMobile && zoomedIn) {\n      return false;\n    }\n    return false;\n  };\n  var getLightboxElem = function getLightboxElem(index) {\n    if (isVideo(index)) {\n      return videoSlideElement(index);\n    } else if (isPictureElement(index)) {\n      var elem_metadata = props.images[index][\"picture\"];\n      return createElement(\"picture\", {\n        className: \"imageModal \\n      \" + (props.fullScreen ? styles.fullScreenLightboxImg : styles.lightbox_img) + \" \\n      \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \"\n      }, Object.keys(elem_metadata).map(function (format) {\n        return createElement(\"source\", {\n          type: format,\n          key: format,\n          srcSet: elem_metadata[format].srcSet\n        });\n      }), createElement(\"img\", {\n        src: elem_metadata['fallback']\n      }));\n    } else {\n      if (images && props.render || frameworkID == 'next') {\n        return imageSlideElement(index);\n      } else {\n        return createElement(\"img\", {\n          className: \"imageModal \" + styles.embla__slide__img + \"\\n          \" + (props.fullScreen ? styles.fullScreenLightboxImg : styles.lightbox_img) + \" \\n          \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \",\n          ref: imageRef,\n          key: index,\n          loading: 'lazy',\n          style: getImageStyle(),\n          src: images && images[index].original ? images[index].original : images[index].src,\n          onLoad: function onLoad() {\n            if (index == slideIndex) {\n              setDisplayLoader(false);\n            }\n            if (props.images) {\n              setItemLoaded(index);\n            } else {\n              setImagesItemLoaded(index);\n            }\n          },\n          id: 'img'\n        });\n      }\n    }\n  };\n  var isVideo = function isVideo(index) {\n    if (props.images) {\n      var elem = props.images[index];\n      if (elem) {\n        if (elem.type == 'yt' || elem.type == 'htmlVideo') {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var isPictureElement = function isPictureElement(index) {\n    if (props.images) {\n      var elem = props.images[index];\n      if (elem) {\n        if (elem.picture) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(function () {\n    if (!emblaApi) return;\n  }, [carouselReady, emblaApi]);\n  var isHTMLVideo = function isHTMLVideo(index) {\n    if (props.images) {\n      if (props.images && props.images[index].type == 'htmlVideo') {\n        return true;\n      }\n    }\n    return false;\n  };\n  var videoSlideElement = function videoSlideElement(index) {\n    var elem = props.images[index];\n    var videoElem;\n    if (elem.type == 'yt') {\n      videoElem = createElement(\"div\", {\n        className: styles.videoOuterContainer + \" imageModal\"\n      }, createElement(YouTube, {\n        videoId: elem.videoID,\n        ref: function ref(el) {\n          return videoReferences.current[index] = el;\n        },\n        iframeClassName: \"\" + styles.ytVideo,\n        title: 'YouTube video player',\n        opts: {\n          height: getVideoHeight(elem),\n          width: getVideoWidth(elem),\n          playerVars: {\n            autoplay: shouldAutoplay(elem) ? 1 : 0\n          }\n        },\n        onReady: function onReady(event) {\n          var videoElems = videoElements;\n          videoElems[index] = event;\n          setVideoElements(videoElems);\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          setItemLoaded(index);\n        },\n        onPlay: function onPlay(event) {\n          setYTVideoCurrentlyPlaying(true);\n        },\n        onPause: function onPause(event) {\n          setYTVideoCurrentlyPlaying(false);\n        },\n        onEnd: function onEnd(event) {\n          setYTVideoCurrentlyPlaying(false);\n        },\n        onError: function onError(event) {},\n        onStateChange: function onStateChange(event) {},\n        onPlaybackRateChange: function onPlaybackRateChange(event) {},\n        onPlaybackQualityChange: function onPlaybackQualityChange(event) {}\n      }));\n    } else if (elem.type == 'htmlVideo') {\n      videoElem = createElement(\"div\", {\n        className: styles.htmlVideo + \" \" + styles.htmlVideoOuterContainer + \" imageModal\"\n      }, createElement(\"video\", {\n        className: styles.cursorPointer + \" \" + styles.lightboxVideo,\n        width: getVideoWidth(elem),\n        ref: function ref(el) {\n          return videoReferences.current[index] = el;\n        },\n        onPlay: function onPlay() {},\n        height: getVideoHeight(elem),\n        autoPlay: index == imgSlideIndex ? shouldAutoplay(elem) : false,\n        controls: true\n      }, createElement(\"source\", {\n        src: elem.videoSrc,\n        type: 'video/mp4',\n        onLoad: function onLoad() {\n          setItemLoaded(index);\n        }\n      })));\n    }\n    return videoElem;\n  };\n  var initZoom = function initZoom(ref) {\n    if (ref.state.scale <= 1.65) {\n      setZoomedIn(false);\n    } else {\n      setZoomedIn(true);\n    }\n  };\n  var regularImgPaneNodes = Array.apply(null, Array(images.length)).map(function (_, index) {\n    return createElement(\"div\", {\n      key: index\n    }, enableMagnifyingGlass == true ? createElement(Magnifier, {\n      src: images[index].src,\n      className: styles.magnifyWrapper + \" \" + styles.lightbox_img,\n      height: imgContainHeight,\n      width: imgContainWidth,\n      mgShowOverflow: false\n    }) : createElement(\"div\", {\n      className: \"\" + styles.embla__slide\n    }, createElement(TransformWrapper, {\n      ref: function ref(el) {\n        return zoomReferences.current[index] = el;\n      },\n      onWheel: function onWheel(ref, wheelEvent) {\n        initZoom(ref);\n      },\n      disabled: disableZoom,\n      panning: {\n        disabled: isPanningDisabled()\n      },\n      key: index,\n      onZoom: function onZoom(ref, event) {\n        initZoom(ref);\n      },\n      onZoomStop: function onZoomStop(ref, event) {\n        initZoom(ref);\n      },\n      onTransformed: function onTransformed(ref, event) {\n        initZoom(ref);\n      },\n      onPinchingStop: function onPinchingStop(ref, event) {\n        initZoom(ref);\n      },\n      centerZoomedOut: true,\n      initialScale: 1,\n      alignmentAnimation: {\n        sizeX: 0,\n        sizeY: 0\n      }\n    }, createElement(TransformComponent, {\n      wrapperStyle: {\n        maxWidth: '100vw',\n        height: '100vh',\n        margin: 'auto'\n      },\n      contentStyle: props.fullScreen ? {\n        maxWidth: '100vw',\n        height: '100vh',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      } : {\n        maxWidth: '100vw',\n        height: '100vh',\n        margin: 'auto',\n        display: 'grid'\n      },\n      key: index\n    }, createElement(\"div\", {\n      className: (props.fullScreen ? styles.slideshow_img_fullscreen : styles.slideshow_img) + \" \" + (props.lightboxImgClass ? props.lightboxImgClass : \"\")\n    }, getLightboxElem(index))))));\n  });\n  var initMagnifyingGlass = function initMagnifyingGlass() {\n    if (!enableMagnifyingGlass) {\n      initImageDimensions();\n    } else {\n      setImgAnimation('imgDrag');\n    }\n    setMagnifyingGlass(!enableMagnifyingGlass);\n  };\n  var initImageDimensions = function initImageDimensions() {\n    var img;\n    if (imgSlideIndex == 0 || imgSlideIndex % images.length == 0) {\n      img = document.getElementById('img');\n    } else {\n      img = imageRef.current;\n    }\n    var ratio = img.naturalWidth / img.naturalHeight;\n    var width = img.height * ratio;\n    var height = img.height;\n    if (width > img.width) {\n      width = img.width;\n      height = img.width / ratio;\n    }\n    setImgContainHeight(height);\n    setImgContainWidth(width);\n  };\n  var initFullScreenChangeEventListeners = function initFullScreenChangeEventListeners() {\n    document.addEventListener('fullscreenchange', exitFullScreenHandler);\n    document.addEventListener('webkitfullscreenchange', exitFullScreenHandler);\n    document.addEventListener('MSFullscreenChange', exitFullScreenHandler);\n    document.addEventListener('mozfullscreenchange', exitFullScreenHandler);\n  };\n  var removeFullScreenChangeEventListeners = function removeFullScreenChangeEventListeners() {\n    document.removeEventListener('fullscreenchange', exitFullScreenHandler);\n    document.removeEventListener('webkitfullscreenchange', exitFullScreenHandler);\n    document.removeEventListener('MSFullscreenChange', exitFullScreenHandler);\n    document.removeEventListener('mozfullscreenchange', exitFullScreenHandler);\n  };\n  var initEventListeners = function initEventListeners() {\n    if (isBrowser()) {\n      window.addEventListener('resize', handleWindowResize);\n    }\n  };\n  var removeEventListeners = function removeEventListeners() {\n    removeOnSelectListener();\n    if (isBrowser()) {\n      window.removeEventListener('resize', handleWindowResize);\n    }\n  };\n  var setReducedMotion = function setReducedMotion(mediaQuery) {\n    if (mediaQuery.matches) {\n      setImgAnimation('fade');\n    }\n  };\n  var checkAndInitReducedMotion = function checkAndInitReducedMotion() {\n    var reducedMotionMediaQuery = '';\n    if (isBrowser()) {\n      reducedMotionMediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n      if (!reducedMotionMediaQuery || reducedMotionMediaQuery.matches) {\n        setImgAnimation('fade');\n      }\n      reducedMotionMediaQuery.addEventListener('change', setReducedMotion(reducedMotionMediaQuery));\n    }\n    return reducedMotionMediaQuery;\n  };\n  var initPropsForControlIcons = function initPropsForControlIcons() {\n    if (props.showFullScreenIcon != undefined) {\n      setDisplayFullScreenIcon(props.showFullScreenIcon);\n    }\n    if (props.showThumbnailIcon != undefined) {\n      setDisplayThumbnailIcon(props.showThumbnailIcon);\n    }\n    if (props.showSlideshowIcon != undefined) {\n      setDisplaySlideshowIcon(props.showSlideshowIcon);\n    }\n    if (props.showMagnificationIcons != undefined) {\n      setDisplayMagnificationIcons(props.showMagnificationIcons);\n    }\n  };\n  var initProps = function initProps() {\n    if (props.showControls != undefined) {\n      setShowControls(props.showControls);\n      if (props.showControls == false) {\n        setDisplayMagnificationIcons(false);\n      }\n    }\n    initPropsForControlIcons();\n    if (props.disableImageZoom) {\n      setDisableZoom(props.disableImageZoom);\n    }\n    if (isBrowser()) {\n      setWidth(window.innerWidth);\n    }\n    if (window.innerWidth <= mobileWidth) {\n      setImgAnimation('fade');\n    }\n  };\n  useInterval(function () {\n    if (isRTL) {\n      updateImageSlideshow(-1);\n    } else {\n      updateImageSlideshow(1);\n    }\n  }, isSlideshowPlaying ? slideshowInterval : null);\n  var openFullScreen = function openFullScreen(lightbox_elem) {\n    if (lightbox_elem.requestFullscreen) {\n      lightbox_elem.requestFullscreen();\n    } else if (lightbox_elem.webkitRequestFullscreen) {\n      lightbox_elem.webkitRequestFullscreen();\n    } else if (lightbox_elem.msRequestFullscreen) {\n      lightbox_elem.msRequestFullscreen();\n    }\n  };\n  var closeFullScreen = function closeFullScreen(document) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  };\n  var isBrowser = function isBrowser() {\n    return typeof window !== \"undefined\";\n  };\n  var initRTLImages = function initRTLImages() {\n    var imagesMetadataCopy = props.images;\n    imagesMetadataCopy.reverse();\n    setImages(imagesMetadataCopy);\n    if (images.length > 0) {\n      var imagesRTLCopy = images;\n      imagesRTLCopy.reverse();\n      setImages(imagesRTLCopy);\n    }\n  };\n  var initImages = function initImages(isMounted, updateImages) {\n    if (coverMode && props.images) {\n      if (props.coverImageInLightbox == false) {\n        var filterImages = props.images.filter(function (img) {\n          return img.cover != true;\n        });\n        setImages(filterImages);\n      } else {\n        setImages(props.images);\n      }\n    }\n    if (updateImages || !isInit) {\n      if (lightboxIdentifier && props.children) {\n        var img_gallery = document.querySelectorAll(\"[data-lightboxjs=\" + lightboxIdentifier + \"]\");\n        var originalImageAttr = false;\n        var img_elements = [];\n        if (img_gallery.length > 0) {\n          var _loop = function _loop(i) {\n            var img = img_gallery[i];\n            var attr_val = img.getAttribute('data-lightboxjs');\n            if (attr_val == lightboxIdentifier) {\n              img.addEventListener('click', function () {\n                var index;\n                if (isRTL) {\n                  index = getRTLIndex(img_gallery.length, i);\n                } else {\n                  index = i;\n                }\n                var reactSwipeOptionConfig = reactSwipeOptions;\n                reactSwipeOptionConfig.startIndex = index;\n                if (isMounted) setReactSwipeOptions(reactSwipeOptionConfig);\n                setZoomIdx(index);\n                openModal(index);\n              }, false);\n              img.classList.add('cursor-pointer');\n              var original_img_src = img.getAttribute('data-lightboxjs-original');\n              if (original_img_src) {\n                img_elements.push({\n                  src: original_img_src,\n                  alt: img.alt,\n                  loaded: false\n                });\n                originalImageAttr = true;\n              } else if (img.src) {\n                img_elements.push({\n                  src: img.src,\n                  alt: img.alt,\n                  loaded: false\n                });\n              } else if (img.tagName == 'DIV') {\n                var corresponding_img_item = props.images[i];\n                var img_src = corresponding_img_item.src;\n                var img_alt = corresponding_img_item.alt;\n                img_elements.push({\n                  src: img_src,\n                  alt: img_alt,\n                  loaded: false\n                });\n              }\n            }\n          };\n          for (var i = 0; i <= img_gallery.length - 1; i++) {\n            _loop(i);\n          }\n          if (isMounted && !coverMode) {\n            if (originalImageAttr) {\n              setImages(img_elements);\n            } else if (props.showAllImages != true && props.framework != \"next\") {\n              setImages(img_elements);\n            } else if (props.framework == \"next\" && !originalImageAttr) {\n              setImages(props.images);\n            } else {\n              setImages(props.images);\n            }\n          }\n        } else {\n          if (props.images) {\n            setImages(props.images);\n          }\n        }\n      } else if (lightboxIdentifier && props.images && !props.children) {\n        setImages(props.images);\n      } else if (!lightboxIdentifier && props.images && !props.children) {\n        setImages(props.images);\n      } else if (!props.render) {\n        var imgArray = [];\n        if (!Array.isArray(props.children)) {\n          imgArray.push(props.children);\n        } else {\n          imgArray = props.children;\n        }\n        var imgs = [];\n        for (var k = 0; k < imgArray.length; k++) {\n          var img_elem = imgArray[k];\n          var img_obj = {\n            src: img_elem.props.src,\n            alt: img_elem.props.alt,\n            loaded: false\n          };\n          imgs.push(img_obj);\n        }\n        if (isRTL) {\n          imgs.reverse();\n        }\n        if (isMounted) setImages(imgs);\n        setPreviewImageElems(imgArray);\n      } else {\n        if (isMounted) {\n          setImages(props.images);\n        }\n      }\n      if (isMounted) setIsInit(true);\n    }\n  };\n  var dispatchSlideSelectEvents = function dispatchSlideSelectEvents(newIndex, prevIndex) {\n    if (newIndex == 0 && prevIndex == images.length - 1) {\n      dispatchNextImgEvent(newIndex);\n    } else if (newIndex == images.length - 1 && prevIndex == 0) {\n      dispatchPrevImgEvent(newIndex);\n    } else if (newIndex > prevIndex) {\n      dispatchNextImgEvent(newIndex);\n    } else if (newIndex < prevIndex) {\n      dispatchPrevImgEvent(newIndex);\n    }\n  };\n  var onSelect = useCallback(function () {\n    if (!emblaApi) return;\n    var newSlideIndex = emblaApi.selectedScrollSnap();\n    var prevSlideIndex = emblaApi.previousScrollSnap();\n    if (newSlideIndex != prevSlideIndex) {\n      initSlide(newSlideIndex);\n      resetMedia(prevSlideIndex);\n      dispatchSlideSelectEvents(newSlideIndex, prevSlideIndex);\n    }\n    if (emblaThumbsApi) {\n      emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap());\n    }\n  }, [emblaApi, emblaThumbsApi]);\n  var onReinit = useCallback(function () {\n    if (!emblaApi) return;\n    setEmblaReinitialized(true);\n  }, [emblaApi, emblaReinitialized]);\n  var handleResize = function handleResize(entry) {\n    emblaApi === null || emblaApi === void 0 ? void 0 : emblaApi.reInit();\n  };\n  var rootNode = (emblaApi === null || emblaApi === void 0 ? void 0 : emblaApi.rootNode()) || null;\n  useResizeObserver(rootNode, handleResize);\n  var removeOnSelectListener = useCallback(function () {\n    if (emblaApi) emblaApi.off('select', onSelect);\n  }, [emblaApi, onSelect]);\n  useEffect(function () {\n    if (emblaApi) {\n      if (zoomedIn) {\n        emblaApi.reInit({\n          draggable: false\n        });\n      } else {\n        emblaApi.reInit({\n          draggable: true\n        });\n      }\n    }\n  }, [zoomedIn]);\n  useEffect(function () {\n    if (!emblaApi) return;\n    if (showModal) emblaApi.reInit();\n  }, [showModal, emblaApi]);\n  useEffect(function () {\n    if (emblaApi) emblaApi.on('select', onSelect);\n  }, [emblaApi, onSelect]);\n  useEffect(function () {\n    if (emblaApi) emblaApi.on('reInit', onReinit);\n  }, [emblaApi, onReinit]);\n  useEffect(function () {\n    initStyling();\n    if (props.iconColor) {\n      setIconColor(props.iconColor);\n    }\n    if (props.backgroundColor) {\n      setBackgroundColor(props.backgroundColor);\n    }\n  }, [props.theme, props.iconColor, props.backgroundColor]);\n  useEffect(function () {\n    initImages(true, true);\n  }, [props.images, props.displayedImages]);\n  useEffect(function () {\n    var slideNum = 0;\n    if (props.open) {\n      if (props.startingSlideIndex) {\n        if (props.startingSlideIndex < images.length && props.startingSlideIndex >= 0) {\n          slideNum = props.startingSlideIndex;\n        } else {\n          slideNum = 0;\n        }\n      }\n      openModalWithSlideNum(slideNum);\n    } else if (props.open == false) {\n      closeModal();\n    }\n  }, [props.open]);\n  useEffect(function () {\n    if (isOpen == true) {\n      dispatchOpenEvent();\n    } else {\n      dispatchCloseEvent();\n    }\n  }, [isOpen]);\n  useEffect(function () {\n    if (props.render) {\n      if (!props.images) {\n        console.error('Array of images must be passed to `SlideshowLightbox` (with the `images` prop) if using custom render method. ');\n      }\n    }\n    var isMounted = true;\n    if (isMounted) initProps();\n    if (coverMode && props.images) {\n      if (props.coverImageInLightbox == false) {\n        var filterImages = props.images.filter(function (img) {\n          return img.cover != true;\n        });\n        setImages(filterImages);\n      } else {\n        setImages(props.images);\n      }\n    }\n    if (isMounted) {\n      initEventListeners();\n    }\n    var reducedMotionMediaQuery = checkAndInitReducedMotion();\n    if (!isInit) {\n      initImages(isMounted, false);\n      if (props.images && isRTL == true) {\n        initRTLImages();\n      }\n    }\n    if (isMounted) initStyling();\n    return function () {\n      isMounted = false;\n      removeEventListeners();\n      reducedMotionMediaQuery.removeEventListener('change', reducedMotionMediaQuery);\n    };\n  }, []);\n  return createElement(\"div\", null, createElement(\"div\", {\n    className: \"\" + initWrapperClassname()\n  }, props.images && props.children && lightboxIdentifier == false ? props.children : null, props.images && lightboxIdentifier == false ? props.images.map(function (elem, index) {\n    return createElement(\"img\", {\n      className: (props.imgClassName ? props.imgClassName : '') + \" \" + styles.cursorPointer,\n      src: !isVideo(index) ? elem.src : elem.thumbnail,\n      onClick: function onClick() {\n        var img_index;\n        if (isRTL) {\n          img_index = getRTLIndex(props.images.length, index);\n        } else {\n          img_index = index;\n        }\n        openModalWithSlideNum(img_index);\n      },\n      key: index\n    });\n  }) : null, lightboxIdentifier != false && props.children && coverMode == false ? props.children : null, lightboxIdentifier == false && props.images || coverMode == true ? null : previewImageElems.filter(function (elem) {\n    return elem.type == 'img';\n  }).map(function (elem, index) {\n    return createElement(\"img\", Object.assign({}, elem.props, {\n      className: (elem.props.className ? elem.props.className : '') + \" \" + styles.cursorPointer,\n      onClick: function onClick() {\n        var img_index;\n        if (isRTL) {\n          img_index = getRTLIndex(previewImageElems.length, index);\n        } else {\n          img_index = index;\n        }\n        openModalWithSlideNum(img_index);\n      },\n      key: index\n    }));\n  }), coverMode ? props.children : false, createElement(AnimateSharedLayout, {\n    type: 'crossfade'\n  }, createElement(AnimatePresence, {\n    initial: false,\n    exitBeforeEnter: true\n  }, showModal !== false && createElement(Portal, null, createElement(Div100vh, null, createElement(motion.div, {\n    className: \"\" + styles.slideshowAnimContainer,\n    key: 'slideshowAnimContainer',\n    id: 'slideshowAnim',\n    style: {\n      backgroundColor: backgroundColor\n    },\n    initial: \"inactive\",\n    variants: variants,\n    animate: showModal ? \"active\" : \"inactive\",\n    exit: \"inactive\",\n    transition: {\n      duration: \"0.3\"\n    },\n    onAnimationComplete: function onAnimationComplete() {\n      var animEntered = !animationEntered;\n      setAnimationEntered(animEntered);\n      if (animEntered == true) {\n        var _document$getElementB;\n        var prevFocusedElement = document.activeElement;\n        setPrevFocusedElem(prevFocusedElement);\n        (_document$getElementB = document.getElementById(\"lightboxContainer\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      } else {\n        prevFocusedElem === null || prevFocusedElem === void 0 ? void 0 : prevFocusedElem.focus();\n      }\n    }\n  }, createElement(\"div\", {\n    className: \"\" + styles.lightboxContainer,\n    id: \"lightboxContainer\",\n    tabIndex: -1,\n    role: \"dialog\",\n    onClick: function onClick(e) {\n      if (modalCloseOption == \"clickOutside\") {\n        checkModalClick(e);\n      }\n    }\n  }, createElement(\"section\", {\n    className: styles.iconsHeader + \" \" + (iconColor ? '' : getIconStyle()) + \" imageModal\",\n    style: {\n      color: iconColor\n    }\n  }, createElement(KeyHandler, {\n    keyValue: 'ArrowLeft',\n    code: '37',\n    onKeyHandle: function onKeyHandle() {\n      prevSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'ArrowRight',\n    code: '39',\n    onKeyHandle: function onKeyHandle() {\n      nextSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Escape',\n    code: '27',\n    onKeyHandle: function onKeyHandle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!isBrowserFullScreen) {\n        closeModal();\n      }\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Left',\n    code: '37',\n    onKeyHandle: function onKeyHandle() {\n      prevSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Right',\n    code: '39',\n    onKeyHandle: function onKeyHandle() {\n      nextSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Esc',\n    code: '27',\n    onKeyHandle: function onKeyHandle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!isBrowserFullScreen) {\n        closeModal();\n      }\n    }\n  }), showControls == true && createElement(\"div\", {\n    className: \"\" + styles.controls\n  }, disableZoom || displayMagnificationIcons == false ? null : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      if (enableMagnifyingGlass) {\n        initMagnifyingGlass();\n      }\n      if (zoomReferences.current[zoomIdx] != null) {\n        zoomReferences.current[zoomIdx].zoomIn();\n      }\n      setZoomedIn(true);\n    }\n  }, createElement(ZoomIn, {\n    size: 24,\n    color: iconColor ? iconColor : undefined,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {}\n  }))), disableZoom || displayMagnificationIcons == false ? null : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      zoomReferences.current[zoomIdx].zoomOut();\n      var scale = zoomReferences.current[zoomIdx].state.scale;\n      if (scale == 1 || scale == 1.65) {\n        setZoomedIn(false);\n      }\n    }\n  }, createElement(ZoomOut, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))), displayDownloadBtn() ? createElement(\"button\", {\n    onClick: function onClick() {\n      saveImage();\n    }\n  }, createElement(Download, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  })) : null, displayFullScreenIcon ? isBrowserFullScreen ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      isBrowserFullScreen ? exitFullScreen() : fullScreen();\n    }\n  }, createElement(FullscreenExit, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      isBrowserFullScreen ? exitFullScreen() : fullScreen();\n    }\n  }, createElement(Fullscreen, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, displayThumbnailIcon ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      setShowThumbnails(!showThumbnails);\n    }\n  }, createElement(GridFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, shouldDisplayMagnifyingGlassIcon() ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      return initMagnifyingGlass();\n    }\n  }, createElement(Search, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, shouldDisplaySlideshowIcon() ? createElement(motion.div, {\n    className: styles.slideshowPlayBtn\n  }, isSlideshowPlaying ? createElement(\"button\", {\n    onClick: function onClick() {\n      isSlideshowPlaying ? stopSlideshow() : playSlideshow();\n    }\n  }, createElement(PauseCircleFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  })) : createElement(\"button\", {\n    onClick: function onClick() {\n      isSlideshowPlaying ? stopSlideshow() : playSlideshow();\n    }\n  }, createElement(PlayCircleFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null), createElement(motion.div, {\n    className: styles.closeIcon + \" \" + (props.showControls == false ? styles.mlAuto : \"\")\n  }, createElement(\"button\", {\n    id: \"closeBtn\",\n    className: styles.closeButton,\n    onClick: function onClick() {\n      closeModal();\n    }\n  }, createElement(XLg, {\n    id: \"closeIcon\",\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    color: iconColor ? iconColor : undefined,\n    style: iconColor ? {\n      color: iconColor\n    } : {}\n  })))), displayArrows() ? createElement(\"div\", null, createElement(\"div\", {\n    className: rightArrowStyle ? styles.next1 + \" \" + getArrowStyle() + \" imageModal\" : \"imageModal\",\n    style: rightArrowStyle,\n    onClick: function onClick() {\n      nextSlide();\n    }\n  }, nextArrowElem ? nextArrowElem : createElement(\"span\", {\n    className: \"\" + (props.rightArrowClassname ? props.rightArrowClassname : \"\")\n  }, \"\\u276F\")), createElement(\"div\", {\n    className: leftArrowStyle ? styles.prev1 + \" \" + getArrowStyle() + \" imageModal\" : \"imageModal\",\n    style: leftArrowStyle,\n    onClick: function onClick() {\n      prevSlide();\n    }\n  }, prevArrowElem ? prevArrowElem : createElement(\"span\", {\n    className: \"\" + (props.leftArrowClassname ? props.leftArrowClassname : \"\")\n  }, \"\\u276E\"))) : null, createElement(AnimatePresence, {\n    initial: false,\n    custom: direction\n  }, createElement(\"div\", {\n    className: (showThumbnails ? styles.slideshowInnerContainerThumbnails : '') + \" \" + styles.embla + \" \" + (isImageCaption() ? styles.slideImageAndCaption : '') + \" \\n                          \" + (props.fullScreen ? styles.slideshowInnerContainerFullScreen : styles.slideshowInnerContainer) + \"  \"\n  }, createElement(\"div\", {\n    className: styles.embla__viewport,\n    ref: showModal ? emblaRef : null\n  }, createElement(\"div\", {\n    className: styles.embla__container\n  }, regularImgPaneNodes))), displayLoader == true && !isHTMLVideo(slideIndex) ? createElement(\"span\", {\n    key: 'loader',\n    className: styles.loader + \" \" + getLoaderThemeClass()\n  }) : null), createElement(\"div\", {\n    className: styles.thumbnailsOuterContainer + \" \" + (isImageCaption() ? styles.thumbnailsAndCaption : ''),\n    style: isImageCaption() ? {\n      backgroundColor: backgroundColor\n    } : {}\n  }, isImageCaption() ? createElement(\"div\", {\n    className: styles.imgTitleContainer + \" imageModal\"\n  }, createElement(\"p\", {\n    className: \"\" + styles.imgTitle,\n    key: 'imgCaption' + slideIndex,\n    style: props.captionStyle ? props.captionStyle : {\n      color: textColor\n    }\n  }, getImageCaption())) : null, createElement(AnimatePresence, {\n    initial: animatedThumbnails\n  }, showThumbnails !== false && createElement(motion.div, {\n    initial: 'hidden',\n    exit: 'hidden',\n    animate: 'visible',\n    style: imagesLoaded ? {} : {\n      display: 'displayHidden'\n    },\n    transition: {\n      type: 'spring',\n      duration: 0.75\n    },\n    variants: thumbnailVariants,\n    className: styles.thumbnails + \" \" + (isImageCaption() ? styles.thumbnailsWithCaption : '')\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs + \" \" + styles.thumbnails\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs__viewport,\n    ref: emblaThumbsRef\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs__container\n  }, frameworkID == 'next' && props.images ? props.images.map(function (img, index) {\n    return getImageThumbnail(img, index, true);\n  }) : images.map(function (img, index) {\n    return getImageThumbnail(img, index, false);\n  })))))))))))))));\n});\nvar themes$1 = {\n  day: {\n    background: 'white',\n    iconColor: 'black',\n    thumbnailBorder: 'solid transparent 2px',\n    textColor: 'black'\n  },\n  night: {\n    background: '#151515',\n    iconColor: 'silver',\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\n    textColor: 'silver'\n  },\n  lightbox: {\n    background: 'rgba(12, 12, 12, 0.93)',\n    iconColor: 'silver',\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\n    textColor: 'silver'\n  }\n};\nvar defaultTheme$1 = \"lightbox\";\nvar AnimImage = function AnimImage(props) {\n  var _useState = useState(props.backgroundColor ? props.backgroundColor : themes$1[defaultTheme$1].background),\n    backgroundColor = _useState[0],\n    setBackgroundColor = _useState[1];\n  var _useState2 = useState(props.iconColor ? props.iconColor : themes$1[defaultTheme$1].iconColor),\n    iconColor = _useState2[0],\n    setIconColor = _useState2[1];\n  var _useState3 = useState(props.fullScreen ? props.fullScreen : false),\n    fullScreen = _useState3[0];\n  var _useState4 = useState(props.modalClose ? props.modalClose : \"default\"),\n    modalCloseOption = _useState4[0];\n  var _useState5 = useState(props.disableImageZoom ? props.disableImageZoom : false),\n    disableZoom = _useState5[0],\n    setDisableZoom = _useState5[1];\n  var _useState6 = useState(props.roundedImages ? props.roundedImages : false),\n    imageRoundedBorder = _useState6[0];\n  var _useState7 = useState(props.showFullScreenIcon ? props.showFullScreenIcon : true),\n    displayFullScreenIcon = _useState7[0];\n  var _useState8 = useState(props.className ? props.className : \"\"),\n    className = _useState8[0];\n  var _useState9 = useState(props.wrapperClassName ? props.wrapperClassName : \"\"),\n    imgWrapperClass = _useState9[0];\n  var _useState10 = useState(props.lightboxImgClass ? props.lightboxImgClass : \"\"),\n    lightboxImgClassName = _useState10[0];\n  var _useState11 = useState(props.className ? props.className : \"\"),\n    imgClass = _useState11[0];\n  var _useState12 = useState(props.showMagnificationIcons ? props.showMagnificationIcons : true),\n    displayMagnificationIcons = _useState12[0],\n    setDisplayMagnificationIcons = _useState12[1];\n  var _useState13 = useState(props.showControls ? props.showControls : true),\n    displayControls = _useState13[0],\n    setDisplayControls = _useState13[1];\n  var _useState14 = useState(props.downloadImages ? props.downloadImages : false),\n    showDownloadBtn = _useState14[0];\n  var _useState15 = useState(props.rtl ? props.rtl : false);\n  var _useState16 = useState(props.lightboxIdentifier ? props.lightboxIdentifier : false),\n    lightboxIdentifier = _useState16[0];\n  var _useState17 = useState(props.framework ? props.framework : ''),\n    frameworkID = _useState17[0];\n  var _useState18 = useState([]),\n    images = _useState18[0],\n    setImages = _useState18[1];\n  var _React$useState = React__default.useState(),\n    state = _React$useState[0];\n  var initProps = function initProps() {\n    if (props.showControls != undefined) {\n      setDisplayControls(props.showControls);\n      setDisableZoom(props.showControls);\n      if (props.showControls == false) {\n        setDisplayMagnificationIcons(false);\n      }\n    }\n  };\n  useEffect(function () {\n    if (props.theme) {\n      if (themes$1[props.theme]) {\n        setBackgroundColor(themes$1[props.theme].background);\n        setIconColor(themes$1[props.theme].iconColor);\n      }\n    }\n    if (props.image && images.length == 0 && frameworkID == \"next\") {\n      var imgs = [];\n      imgs.push(props.image);\n      setImages(imgs);\n    } else {\n      setImages(null);\n    }\n    return function () {};\n  }, [state]);\n  var getImage = function getImage() {\n    if (frameworkID == \"next\" && props.children != undefined) {\n      return props.children;\n    } else if (frameworkID != \"next\") {\n      return React__default.createElement(\"img\", {\n        src: props.image.src,\n        alt: props.image.title,\n        className: \"\" + className\n      });\n    }\n  };\n  useEffect(function () {\n    var isMounted = true;\n    if (isMounted) initProps();\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return React__default.createElement(SlideshowLightbox, {\n    showSlideshowIcon: false,\n    showThumbnails: false,\n    backgroundColor: backgroundColor,\n    iconColor: iconColor,\n    theme: props.theme,\n    lightboxIdentifier: lightboxIdentifier,\n    fullScreen: fullScreen,\n    showMagnificationIcons: displayMagnificationIcons,\n    showFullScreenIcon: displayFullScreenIcon,\n    downloadImages: showDownloadBtn,\n    roundedImages: imageRoundedBorder,\n    disableImageZoom: disableZoom,\n    showArrows: false,\n    showThumbnailIcon: false,\n    showControls: displayControls,\n    modalClose: modalCloseOption,\n    lightboxImgClass: lightboxImgClassName,\n    imgClassName: imgClass,\n    imageComponent: true,\n    framework: frameworkID,\n    imgWrapperClassName: imgWrapperClass,\n    images: images\n  }, getImage());\n};\nvar initLightboxJS = function initLightboxJS(licenseKey, plan_type) {\n  var body = {\n    license_key: licenseKey,\n    plan_type: plan_type\n  };\n  axios.post('https://lightboxjs-server.herokuapp.com/license', body).then(function (response) {\n    var licenseKeyValid = response.data.license_valid;\n    if (!licenseKeyValid) {\n      console.warn(\"Lightbox.js: Invalid license key specified, a valid license key must be provided.\");\n    }\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\nexport { AnimImage as Image, SlideshowLightbox, initLightboxJS };","map":{"version":3,"names":["wrapNums","minNum","maxNum","v","rangeSize","shouldAutoplay","elem","type","autoPlay","getVideoHeight","videoHeight","getVideoWidth","videoWidth","thumbnailVariants","visible","opacity","y","hidden","themes","day","background","iconColor","thumbnailBorder","textColor","night","lightbox","inactiveThumbnailBorder","defaultTheme","mobileWidth","SlideshowLightbox","forwardRef","props","ref","useImperativeHandle","reset","initImages","createCustomThumbnailBorder","_useState","useState","_useState$","imgSlideIndex","direction","setImgSlideIndex","_useState2","showModal","setShowModal","_useState3","isSlideshowPlaying","setIsSlideshowPlaying","_useState4","emblaReinitialized","setEmblaReinitialized","_useState5","images","setImages","_useState6","previewImageElems","setPreviewImageElems","slideIndex","length","_useState7","loop","startIndex","active","reactSwipeOptions","setReactSwipeOptions","initialThumbnailOptions","containScroll","dragFree","_useState8","thumbnailSwipeOptions","setThumbnailSwipeOptions","_useState9","carouselReady","setCarouselReady","_useState10","zoomedIn","setZoomedIn","_useState11","isOpen","setIsOpen","_useState12","prevFocusedElem","setPrevFocusedElem","_useState13","animationEntered","setAnimationEntered","_useState14","magnifyingGlass","magnifyingGlassFeature","_useState15","disableImageZoom","disableZoom","setDisableZoom","_useState16","slideshowInterval","_useState17","rightArrowStyle","_useState18","leftArrowStyle","_useState19","roundedImages","isRounded","setIsRounded","_useState20","showControls","setShowControls","_useState21","showFullScreenIcon","displayFullScreenIcon","setDisplayFullScreenIcon","_useState22","showThumbnailIcon","displayThumbnailIcon","setDisplayThumbnailIcon","_useState23","showSlideshowIcon","setDisplaySlideshowIcon","_useState24","showMagnificationIcons","displayMagnificationIcons","setDisplayMagnificationIcons","_useState25","nextArrow","nextArrowElem","_useState26","imageComponent","isImageComponent","_useState27","prevArrow","prevArrowElem","_useState28","modalClose","modalCloseOption","_useState29","downloadImages","showDownloadBtn","_useState30","rtl","isRTL","_useState31","framework","frameworkID","_useState32","lightboxIdentifier","_useState33","fullScreen","imageFullScreen","_useState34","licenseKey","_useState35","showLoader","displayLoader","setDisplayLoader","_useState36","backgroundColor","setBackgroundColor","_useState37","setIconColor","_useState38","setTextColor","_useState39","useCoverMode","coverMode","_useState40","_useState41","showThumbnails","setShowThumbnails","_useState42","animateThumbnails","animatedThumbnails","_useState43","imgAnimation","setImgAnimation","_useState44","arrowStyle","_useState45","setYTVideoCurrentlyPlaying","_useState46","width","setWidth","_useState47","isBrowserFullScreen","setIsBrowserFullScreen","_useState48","enableMagnifyingGlass","setMagnifyingGlass","_useState49","imagesLoaded","setImagesLoaded","imageRef","useRef","_useState50","zoomIdx","setZoomIdx","_useState51","imgContainHeight","setImgContainHeight","_useState52","imgContainWidth","setImgContainWidth","_useState53","isInit","setIsInit","zoomReferences","videoReferences","btnRef","_useState54","videoElements","setVideoElements","isMobile","getLoaderThemeClass","theme","styles","night_loader","day_loader","_useEmblaCarousel","useEmblaCarousel","emblaRef","emblaApi","_useEmblaCarousel2","emblaThumbsRef","emblaThumbsApi","scrollPrev","useCallback","scrollNext","variants","inactive","isImageCaption","caption","displayDownloadBtn","isVideo","handleWindowResize","window","innerWidth","shouldDisplayMagnifyingGlassIcon","getImageStyle","styleObject","shouldDisplaySlideshowIcon","undefined","thumbnailClick","index","initLoader","setCurrentSlide","checkModalClick","e","modals","document","getElementsByClassName","arr_modals","Array","from","i","clickInside","contains","target","closeModal","getRTLIndex","img_gallery_length","getElementById","openFullScreen","initFullScreenChangeEventListeners","exitFullScreenHandler","closeFullScreen","removeFullScreenChangeEventListeners","exitFullScreen","updateImageSlideshow","newDirection","displayArrows","showArrows","newIndex","loaded","getImageCaption","getArrowStyle","dark_icon","light_icon","getIconStyle","dark_header_icon","light_header_icon","scrollTo","dispatchOpenEvent","onOpen","dispatchCloseEvent","onClose","dispatchNextImgEvent","onNext","dispatchPrevImgEvent","onPrev","focus","openModal","num","reInit","selectedScrollSnap","setItemLoaded","map","img","_extends","setImagesItemLoaded","resetMedia","slide_index","resetVideo","resetImage","initSlide","newSlideIndex","wrap_slide_index","nextSlide","prevSlide","setThumbnailStartIndex","thumbnailSwipeOptionConfig","openModalWithSlideNum","reactSwipeOptionConfig","saveImage","original","saveAs","src","playSlideshow","stopSlideshow","current","pause","pauseVideo","getImageThumbnail","isNextJS","createElement","key","className","embla_thumbs__slide","thumbnail","getThumbnailImgSrcNext","getThumbnailImgSrc","alt","onLoad","style","border","onClick","initMagnifyingGlass","resetTransform","img_src","isArray","isAnimImageComponent","initWrapperClassname","classNameStr","imgWrapperClassName","lightboxjs","initStyling","imageSlideElement","imageElem","embla__slide__img","fullScreenLightboxImg","lightbox_img","maxWidthFull","maxWidthWithoutMagnifier","loading","id","render","imgSlide","img_link","_images$index$src","coverImageInLightbox","isPanningDisabled","getLightboxElem","videoSlideElement","isPictureElement","elem_metadata","Object","keys","format","srcSet","picture","useEffect","isHTMLVideo","videoElem","videoOuterContainer","YouTube","videoId","videoID","el","iframeClassName","ytVideo","title","opts","height","playerVars","autoplay","onReady","event","videoElems","onPlay","onPause","onEnd","onError","onStateChange","onPlaybackRateChange","onPlaybackQualityChange","htmlVideo","htmlVideoOuterContainer","cursorPointer","lightboxVideo","controls","videoSrc","initZoom","state","scale","regularImgPaneNodes","apply","_","Magnifier","magnifyWrapper","mgShowOverflow","embla__slide","TransformWrapper","onWheel","wheelEvent","disabled","panning","onZoom","onZoomStop","onTransformed","onPinchingStop","centerZoomedOut","initialScale","alignmentAnimation","sizeX","sizeY","TransformComponent","wrapperStyle","maxWidth","margin","contentStyle","marginLeft","marginRight","display","slideshow_img_fullscreen","slideshow_img","lightboxImgClass","initImageDimensions","ratio","naturalWidth","naturalHeight","addEventListener","removeEventListener","initEventListeners","isBrowser","removeEventListeners","removeOnSelectListener","setReducedMotion","mediaQuery","matches","checkAndInitReducedMotion","reducedMotionMediaQuery","matchMedia","initPropsForControlIcons","initProps","useInterval","lightbox_elem","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","initRTLImages","imagesMetadataCopy","reverse","imagesRTLCopy","isMounted","updateImages","filterImages","filter","cover","children","img_gallery","querySelectorAll","originalImageAttr","img_elements","_loop","attr_val","getAttribute","classList","add","original_img_src","push","tagName","corresponding_img_item","img_alt","showAllImages","imgArray","imgs","k","img_elem","img_obj","dispatchSlideSelectEvents","prevIndex","onSelect","prevSlideIndex","previousScrollSnap","onReinit","handleResize","entry","rootNode","useResizeObserver","off","draggable","on","displayedImages","slideNum","open","startingSlideIndex","console","error","imgClassName","img_index","assign","AnimateSharedLayout","AnimatePresence","initial","exitBeforeEnter","Portal","Div100vh","motion","div","slideshowAnimContainer","animate","exit","transition","duration","onAnimationComplete","animEntered","_document$getElementB","prevFocusedElement","activeElement","lightboxContainer","tabIndex","role","iconsHeader","color","KeyHandler","keyValue","code","onKeyHandle","preventDefault","stopPropagation","zoomIn","ZoomIn","size","lightboxjs_icon","zoomOut","ZoomOut","Download","FullscreenExit","Fullscreen","GridFill","Search","slideshowPlayBtn","PauseCircleFill","PlayCircleFill","closeIcon","mlAuto","closeButton","XLg","next1","rightArrowClassname","prev1","leftArrowClassname","custom","slideshowInnerContainerThumbnails","embla","slideImageAndCaption","slideshowInnerContainerFullScreen","slideshowInnerContainer","embla__viewport","embla__container","loader","thumbnailsOuterContainer","thumbnailsAndCaption","imgTitleContainer","imgTitle","captionStyle","thumbnails","thumbnailsWithCaption","embla_thumbs","embla_thumbs__viewport","embla_thumbs__container","themes$1","defaultTheme$1","AnimImage","imageRoundedBorder","wrapperClassName","imgWrapperClass","lightboxImgClassName","imgClass","displayControls","setDisplayControls","_React$useState","React__default","image","getImage","initLightboxJS","plan_type","body","license_key","axios","post","then","response","licenseKeyValid","data","license_valid","warn","log"],"sources":["C:\\Users\\elena\\Downloads\\mern\\client\\node_modules\\lightbox.js-react\\src\\utility.js","C:\\Users\\elena\\Downloads\\mern\\client\\node_modules\\lightbox.js-react\\src\\SlideshowLightbox.tsx","C:\\Users\\elena\\Downloads\\mern\\client\\node_modules\\lightbox.js-react\\src\\AnimImage.tsx","C:\\Users\\elena\\Downloads\\mern\\client\\node_modules\\lightbox.js-react\\src\\index.tsx"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport const wrapNums = (minNum, maxNum, v) => {\r\n      let rangeSize = maxNum - minNum;\r\n      return ((((v - minNum) % rangeSize) + rangeSize) % rangeSize) + minNum;\r\n};\r\n\r\nexport const shouldAutoplay = (elem) => {\r\n  // Autoplay for HTML5 Video elems set to true by default\r\n  // Autoplay is off by default for YouTube embeds\r\n\r\n  if (elem.type == 'yt' && elem.autoPlay != true && elem.autoPlay != 'true') {\r\n    return false\r\n  } else if (elem.autoPlay == false || elem.autoPlay == 'false') {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getVideoHeight = (elem) => {\r\n  if (elem.videoHeight) {\r\n    return elem.videoHeight\r\n  }\r\n  return \"200\"\r\n}\r\n\r\nexport const getVideoWidth = (elem) => {\r\n  if (elem.videoWidth) {\r\n    return elem.videoWidth\r\n  }\r\n  return \"900\"\r\n}\r\n\r\nexport const useInterval = (callback, timeDelay) => {\r\n      const savedCallbackRef = useRef();\r\n    \r\n      useEffect(() => {\r\n        savedCallbackRef.current = callback;\r\n      }, [callback]);\r\n    \r\n      useEffect(() => {\r\n        function tick() {\r\n          savedCallbackRef.current();\r\n        }\r\n        if (timeDelay !== null) {\r\n          // Set the interval\r\n          let intervalID = setInterval(tick, timeDelay);\r\n\r\n          // Remove the interval\r\n          return () => clearInterval(intervalID);\r\n        }\r\n      }, [timeDelay]);\r\n}\r\n\r\nexport const openFullScreen = (lightbox_elem) => {\r\n  if (lightbox_elem.requestFullscreen) {\r\n    lightbox_elem.requestFullscreen();\r\n  } \r\n\r\n  /* Safari */\r\n  else if (lightbox_elem.webkitRequestFullscreen) { \r\n    lightbox_elem.webkitRequestFullscreen();\r\n  } \r\n  \r\n  /* Internet Explorer */\r\n  else if (lightbox_elem.msRequestFullscreen) { \r\n    lightbox_elem.msRequestFullscreen();\r\n  }\r\n}\r\n\r\nexport const closeFullScreen = (document) => {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } \r\n\r\n  /* Safari */\r\n  else if (document.webkitExitFullscreen) { \r\n    document.webkitExitFullscreen();\r\n  } \r\n  \r\n  /* Internet Explorer */\r\n  else if (document.msExitFullscreen) { \r\n    document.msExitFullscreen();\r\n  }\r\n}\r\n\r\nexport const swipePower = (offset, velocity) => {\r\n    return Math.abs(offset) * velocity;\r\n};\r\n\r\nexport const isBrowser = () => typeof window !== \"undefined\"\r\n\r\n","import * as React from 'react'\r\nimport { useState, useEffect, useRef, useCallback, forwardRef, useImperativeHandle, ForwardRefExoticComponent} from 'react'\r\nimport { motion, AnimatePresence, AnimateSharedLayout, useIsPresent } from 'framer-motion'\r\nimport styles from './styles.module.css'\r\n\r\nimport {\r\n  wrapNums,\r\n  getVideoHeight,\r\n  getVideoWidth,\r\n  shouldAutoplay,\r\n} from './utility'\r\nimport {\r\n  ZoomIn,\r\n  ZoomOut,\r\n  Fullscreen,\r\n  PlayCircleFill,\r\n  Search,\r\n  Download,\r\n  PauseCircleFill,\r\n  FullscreenExit,\r\n  XLg,\r\n  GridFill\r\n} from 'react-bootstrap-icons'\r\nimport { ReactNode } from 'react';\r\nimport Magnifier from 'react-magnifier'\r\nimport { Portal } from 'react-portal'\r\nimport { TransformWrapper, TransformComponent, ReactZoomPanPinchRef, } from 'react-zoom-pan-pinch'\r\nimport { saveAs } from 'file-saver'\r\nimport Div100vh from 'react-div-100vh'\r\nimport KeyHandler from 'react-key-handler'\r\nimport { useInterval } from 'usehooks-ts'\r\nimport useEmblaCarousel from 'embla-carousel-react'\r\nimport YouTube from 'react-youtube';\r\nimport useResizeObserver from '@react-hook/resize-observer';\r\n\r\nlet thumbnailVariants: any = {\r\n  visible: { opacity: 1, y: 0 },\r\n  hidden: { opacity: 0, y: 100 }\r\n}\r\n\r\nconst themes: any = {\r\n  day: {\r\n    background: 'white',\r\n    iconColor: 'black',\r\n    thumbnailBorder: 'solid transparent 2px',\r\n    textColor: 'black'\r\n  },\r\n  night: {\r\n    background: '#151515',\r\n    iconColor: '#626b77',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\r\n    textColor: '#626b77'\r\n  },\r\n  lightbox: {\r\n    background: 'rgba(12, 12, 12, 0.93)',\r\n    iconColor: '#626b77',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\r\n    textColor: 'silver'\r\n  }\r\n}\r\n\r\n// const activeThumbnailBorder = 'solid rgba(107, 133, 206, 0.6) 2px'\r\nconst inactiveThumbnailBorder = 'solid transparent 2px'\r\n\r\nconst defaultTheme = 'night'\r\nconst mobileWidth = 768\r\n\r\ninterface SlideItem {\r\n  src?: any,\r\n  original?: string,\r\n  type?: string,\r\n  alt?: string,\r\n  loaded?: boolean\r\n}\r\n\r\ninterface ImageElement {\r\n  src?: any,\r\n  alt?: string,\r\n  loaded?: boolean,\r\n}\r\n\r\ntype SlideshowLightboxHandle = {\r\n  children?: ReactNode;\r\n  reset: () => void;\r\n};\r\n\r\nexport interface SlideshowLightboxProps {\r\n  children?: ReactNode;\r\n  ref?: any;\r\n  thumbnailBorder?: string;\r\n  magnifyingGlass? : boolean;\r\n  backgroundColor? : string;\r\n  theme? : string;\r\n  iconColor? : any;\r\n  fullScreen?: boolean;\r\n  showControls?: boolean;\r\n  disableImageZoom?: boolean;\r\n  slideshowInterval?: number;\r\n  showThumbnails?: boolean;\r\n  open?: boolean;\r\n  animateThumbnails?: boolean;\r\n  showFullScreenIcon?: boolean;\r\n  showThumbnailIcon?: boolean;\r\n  showSlideshowIcon?: boolean;\r\n  showMagnificationIcons?: boolean;\r\n  roundedImages?: boolean;\r\n  downloadImages?: boolean;\r\n  rtl?: boolean;\r\n  modalClose?: string;\r\n  framework?: string;\r\n  lightboxIdentifier?: string;\r\n  nextArrow?: any;\r\n  prevArrow?: any;\r\n  arrowStyle?: any;\r\n  showLoader?: boolean;\r\n  useCoverMode?: boolean;\r\n  rightArrowStyle?: any;\r\n  leftArrowStyle?: any;\r\n  imgAnimation?: string;\r\n  textColor?: string;\r\n  licenseKey?: string;\r\n  images?: any;\r\n  render?: any;\r\n  imageComponent?: boolean;\r\n  showArrows?: boolean;\r\n  lightboxImgClass?: string;\r\n  coverImageInLightbox?: boolean;\r\n  onOpen?: any;\r\n  onClose?: any;\r\n  onNext?: any;\r\n  onPrev?: any;\r\n  className?: string;\r\n  imgWrapperClassName?: string;\r\n  imgClassName?: string;\r\n  startingSlideIndex?: number;\r\n  showAllImages?: any;\r\n  rightArrowClassname?: string;\r\n  leftArrowClassname?: string;\r\n  displayedImages?: any;\r\n  captionStyle?: any;\r\n}\r\n\r\nexport const SlideshowLightbox: React.FC<SlideshowLightboxProps> = React.forwardRef<SlideshowLightboxHandle, SlideshowLightboxProps>((props, ref) => {\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n        reset() {\r\n          initImages(true, true)\r\n        }\r\n    })\r\n  )\r\n\r\n  const createCustomThumbnailBorder = (): string | void => {\r\n    if (props.thumbnailBorder) {\r\n      return `solid ${props.thumbnailBorder} 2px`\r\n    }\r\n  }\r\n\r\n  const [[imgSlideIndex, direction], setImgSlideIndex] = useState([0, 0])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [isSlideshowPlaying, setIsSlideshowPlaying] = useState(false)\r\n\r\n  const [emblaReinitialized, setEmblaReinitialized] = useState(false)\r\n\r\n  const [images, setImages] = useState<SlideItem[]>([]);\r\n\r\n  const [previewImageElems, setPreviewImageElems] = useState<any[]>([]);\r\n\r\n  const slideIndex = wrapNums(0, images.length, imgSlideIndex)\r\n\r\n  const [reactSwipeOptions, setReactSwipeOptions] = useState({\r\n    loop: true, \r\n    startIndex: 0,\r\n    active: true,  \r\n  })\r\n\r\n  let initialThumbnailOptions: any = {\r\n    startIndex: 0,\r\n    containScroll: 'keepSnaps',\r\n    dragFree: true\r\n  }\r\n\r\n  const [thumbnailSwipeOptions, setThumbnailSwipeOptions] = useState(initialThumbnailOptions)\r\n\r\n  const [carouselReady, setCarouselReady] = useState(false)\r\n\r\n  const [zoomedIn, setZoomedIn] = useState(false)\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const [prevFocusedElem, setPrevFocusedElem] = useState<HTMLElement | null>(null)\r\n  const [animationEntered, setAnimationEntered] = useState(false)\r\n\r\n  const [magnifyingGlassFeature, _setMagnifyingGlassFeature] = useState(\r\n    props.magnifyingGlass ? props.magnifyingGlass : false\r\n  )\r\n\r\n  const [disableZoom, setDisableZoom] = useState(\r\n    props.disableImageZoom ? props.disableImageZoom : false\r\n  )\r\n\r\n  const [slideshowInterval, setSlideshowInterval] = useState(\r\n    props.slideshowInterval ? props.slideshowInterval : 1700\r\n  )\r\n\r\n  const [rightArrowStyle, setRightArrowStyle] = useState(\r\n    props.rightArrowStyle ? props.rightArrowStyle : {}\r\n  )\r\n\r\n  const [leftArrowStyle, setLeftArrowStyle] = useState(\r\n    props.leftArrowStyle ? props.leftArrowStyle : {}\r\n  )\r\n\r\n  const [isRounded, setIsRounded] = useState(\r\n    props.roundedImages ? props.roundedImages : false\r\n  )\r\n\r\n  const [showControls, setShowControls] = useState<boolean>(\r\n    props.showControls ? props.showControls : true\r\n  )\r\n\r\n  const [displayFullScreenIcon, setDisplayFullScreenIcon] = useState<boolean>(\r\n    props.showFullScreenIcon ? props.showFullScreenIcon : true\r\n  )\r\n\r\n  const [displayThumbnailIcon, setDisplayThumbnailIcon] = useState<boolean>(\r\n    props.showThumbnailIcon ? props.showThumbnailIcon : true\r\n  )\r\n\r\n  const [displaySlideshowIcon, setDisplaySlideshowIcon] = useState<boolean>(\r\n    props.showSlideshowIcon ? props.showSlideshowIcon : true\r\n  )\r\n\r\n  const [displayMagnificationIcons, setDisplayMagnificationIcons] = useState<boolean>(\r\n    props.showMagnificationIcons ? props.showMagnificationIcons : true\r\n  )\r\n\r\n  const [nextArrowElem, setNextArrowElem] = useState(\r\n    props.nextArrow ? props.nextArrow : null\r\n  )\r\n\r\n  const [isImageComponent, setImageComponent] = useState(\r\n    props.imageComponent ? props.imageComponent : null\r\n  )\r\n\r\n  const [prevArrowElem, setPrevArrowElem] = useState(\r\n    props.prevArrow ? props.prevArrow : null\r\n  )\r\n\r\n  const [modalCloseOption, setModalCloseOption] = useState(\r\n    props.modalClose ? props.modalClose : \"default\"\r\n  )\r\n\r\n  const [showDownloadBtn, setShowDownloadBtn] = useState(\r\n    props.downloadImages ? props.downloadImages : false\r\n  )\r\n\r\n  const [isRTL, setIsRTL] = useState(props.rtl ? props.rtl : false)\r\n\r\n  const [frameworkID, setFrameworkID] = useState(\r\n    props.framework ? props.framework : ''\r\n  )\r\n  const [lightboxIdentifier, setLightboxIdentifier] = useState(\r\n    props.lightboxIdentifier ? props.lightboxIdentifier : false\r\n  )\r\n  const [imageFullScreen, setImageFullScreen] = useState(\r\n    props.fullScreen ? props.fullScreen : false\r\n  )\r\n  const [licenseKey, setLicenseKey] = useState(\r\n    props.licenseKey ? props.licenseKey : ''\r\n  )\r\n\r\n  const [displayLoader, setDisplayLoader] = useState(\r\n    props.showLoader ? props.showLoader : false\r\n  )\r\n\r\n  // Styling/theming\r\n  const [backgroundColor, setBackgroundColor] = useState(\r\n    props.backgroundColor\r\n      ? props.backgroundColor\r\n      : themes[defaultTheme].background\r\n  )\r\n  const [iconColor, setIconColor] = useState(\r\n    props.iconColor ? props.iconColor : null\r\n  )\r\n  const [textColor, setTextColor] = useState(\r\n    props.textColor ? props.textColor : themes[defaultTheme].textColor\r\n  )\r\n\r\n  const [coverMode, setCoverMode] = useState(\r\n    props.useCoverMode ? props.useCoverMode : false\r\n  )\r\n\r\n  const [thumbnailBorder, setThumbnailBorder] = useState(\r\n    props.thumbnailBorder\r\n      ? createCustomThumbnailBorder()\r\n      : themes[defaultTheme].thumbnailBorder\r\n  )\r\n\r\n  const [showThumbnails, setShowThumbnails] = useState(\r\n    props.showThumbnails ? props.showThumbnails : false\r\n  )\r\n  const [animatedThumbnails, setAnimatedThumbnails] = useState(\r\n    props.animateThumbnails ? props.animateThumbnails : true\r\n  )\r\n  const [imgAnimation, setImgAnimation] = useState(\r\n    props.imgAnimation ? props.imgAnimation : 'imgDrag'\r\n  )\r\n  const [arrowStyle, setArrowStyle] = useState(\r\n    props.arrowStyle ? props.arrowStyle : 'dark'\r\n  )\r\n\r\n  const [YTVideoCurrentlyPlaying, setYTVideoCurrentlyPlaying] = useState(false)\r\n\r\n  const [width, setWidth] = useState(0)\r\n\r\n  const [isBrowserFullScreen, setIsBrowserFullScreen] = useState(false)\r\n  const [enableMagnifyingGlass, setMagnifyingGlass] = useState(false)\r\n  const [imagesLoaded, setImagesLoaded] = useState(false)\r\n\r\n  const imageRef: React.RefObject<HTMLImageElement> = useRef(null)\r\n\r\n  const [zoomIdx, setZoomIdx] = useState(0)\r\n\r\n  const [imgContainHeight, setImgContainHeight] = useState(500)\r\n  const [imgContainWidth, setImgContainWidth] = useState(426)\r\n  const [isInit, setIsInit] = useState(false)\r\n\r\n  // Refs\r\n  const zoomReferences = useRef<(ReactZoomPanPinchRef | null)[]>([])\r\n\r\n  const videoReferences = useRef({})\r\n\r\n  const btnRef = useRef(null)\r\n\r\n\r\n  const [videoElements, setVideoElements] = useState({});\r\n\r\n  const isMobile = width <= mobileWidth;\r\n\r\n  const getLoaderThemeClass = () => {\r\n    if (props.theme) {\r\n      if (props.theme == 'night' || props.theme == 'lightbox') {\r\n        return styles.night_loader\r\n      } else if (props.theme == 'day') {\r\n        return styles.day_loader\r\n      }\r\n    }\r\n    return styles.night_loader\r\n  }\r\n\r\n  const [emblaRef, emblaApi] = useEmblaCarousel(reactSwipeOptions);\r\n  const [emblaThumbsRef, emblaThumbsApi] = useEmblaCarousel(thumbnailSwipeOptions)\r\n\r\n  const scrollPrev = useCallback(() => {    \r\n    if (emblaApi) {emblaApi.scrollPrev()}  \r\n      \r\n  }, [emblaApi])\r\n\r\n  const scrollNext = useCallback(() => {    \r\n    if (emblaApi) emblaApi.scrollNext()  \r\n  }, [emblaApi])\r\n\r\n  const variants = {\r\n    active: {\r\n        opacity: 1,\r\n    },\r\n    inactive: {\r\n      opacity: 0,\r\n    }\r\n  }\r\n\r\n  const isImageCaption = () => {\r\n    if (props.images && props.images[slideIndex].caption) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const displayDownloadBtn = () => {\r\n    if (isVideo(slideIndex)) {\r\n      return false\r\n    } else {\r\n      return showDownloadBtn\r\n    }\r\n  }\r\n\r\n  function handleWindowResize() {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  const shouldDisplayMagnifyingGlassIcon = () => {\r\n    if (isVideo(slideIndex)) {\r\n      return false\r\n    }\r\n    if (isMobile == true) {\r\n      return false\r\n    }\r\n    if (imageFullScreen == true) {\r\n      return false\r\n    }\r\n\r\n    if (magnifyingGlassFeature == true) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const getImageStyle = () => {\r\n    let styleObject = {};\r\n    if (isRounded) {\r\n      styleObject[\"borderRadius\"] = \"20px\";\r\n    }\r\n    if (modalCloseOption == \"clickOutside\") {\r\n      styleObject[\"pointerEvents\"] = \"auto\"\r\n    }\r\n    if (isImageComponent && showThumbnails == false && !isMobile) {\r\n      styleObject[\"height\"] = \"85vh\";\r\n    }\r\n    return styleObject;\r\n  }\r\n\r\n  const shouldDisplaySlideshowIcon = () => {\r\n\r\n    if (props.showSlideshowIcon != undefined) {\r\n      return props.showSlideshowIcon;\r\n    }\r\n\r\n    if (images) {\r\n      if (images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n    else if (props.images) {\r\n      if (props.images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const thumbnailClick = (index) => {\r\n    initLoader(index)\r\n    setCurrentSlide(index)\r\n  }\r\n\r\n  const checkModalClick = (e) => {\r\n    const modals = document.getElementsByClassName('imageModal')\r\n    let arr_modals = Array.from(modals)\r\n    for (let i = 0; i < arr_modals.length; i++) {\r\n      let elem = arr_modals[i]\r\n      let clickInside = elem.contains(e.target);\r\n\r\n      if (clickInside) {\r\n        return\r\n      }\r\n    }\r\n\r\n    closeModal()\r\n  }\r\n\r\n  const isZoomEnabled = () => {\r\n    if (disableZoom == true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getRTLIndex = (img_gallery_length, i) => {\r\n    let index\r\n    if (i == 0) {\r\n      index = img_gallery_length - 1\r\n    } else if (i == img_gallery_length - 1) {\r\n      index = 0\r\n    } else {\r\n      index = img_gallery_length - i - 1\r\n    }\r\n    return index\r\n  }\r\n\r\n  const getIconColor = () => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        return themes[props.theme].iconColor;\r\n      }\r\n    }\r\n    else {\r\n      return themes[defaultTheme].iconColor;\r\n    }\r\n  }\r\n\r\n  const fullScreen = () => {\r\n    let lightbox = document.getElementById('slideshowAnim')\r\n    openFullScreen(lightbox)\r\n    setIsBrowserFullScreen(true)\r\n    initFullScreenChangeEventListeners()\r\n  }\r\n\r\n  const exitFullScreenHandler = () => {\r\n    //in full screen mode\r\n    if (\r\n      document['webkitIsFullScreen'] ||\r\n      document['mozFullScreen'] ||\r\n      document['msFullscreenElement']\r\n    ) {\r\n      setIsBrowserFullScreen(true)\r\n    } else {\r\n      if (isBrowserFullScreen) {\r\n        closeFullScreen(document)\r\n      }\r\n      removeFullScreenChangeEventListeners()\r\n      setIsBrowserFullScreen(false)\r\n    }\r\n  }\r\n\r\n  const exitFullScreen = () => {\r\n    closeFullScreen(document)\r\n    removeFullScreenChangeEventListeners()\r\n    setIsBrowserFullScreen(false)\r\n  }\r\n\r\n  const updateImageSlideshow = (newDirection) => {\r\n    if (isRTL) {\r\n      scrollPrev()\r\n    } else {\r\n      scrollNext();\r\n    }\r\n\r\n    setImgSlideIndex([imgSlideIndex + newDirection, newDirection])\r\n    if (isRTL) {\r\n      setZoomIdx(zoomIdx - 1 < 0 ? images.length - 1 : zoomIdx - 1)\r\n    } else {\r\n      setZoomIdx(zoomIdx + 1 >= images.length ? 0 : zoomIdx + 1)\r\n    }\r\n  }\r\n\r\n  const displayArrows = () => {\r\n    if (props.showArrows == false) {\r\n      return false;\r\n    }\r\n    else if (images.length == 1) {\r\n      return false;\r\n    }\r\n    if (props.images) {\r\n      if (props.images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const initLoader = (newIndex) => {\r\n\r\n    if (props.showLoader && props.images) {\r\n      if (!isVideo(newIndex) && images[newIndex].loaded != true) {\r\n        setDisplayLoader(true)\r\n      } else if (\r\n        props.showLoader &&\r\n        props.images &&\r\n        images[newIndex]['loaded']\r\n      ) {\r\n        setDisplayLoader(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getImageCaption = (): string => {\r\n    if (props.images) {\r\n      return props.images[slideIndex].caption;\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const getArrowStyle = (): string | void => {\r\n    if (arrowStyle == 'dark') {\r\n      return styles.dark_icon\r\n    } else if (arrowStyle == 'light') {\r\n      return styles.light_icon\r\n    }\r\n  }\r\n\r\n  const getIconStyle = (): string | undefined => {\r\n    if (arrowStyle == 'dark') {\r\n      return styles.dark_header_icon\r\n    } \r\n    else if (arrowStyle == 'light') {\r\n      return styles.light_header_icon\r\n    }\r\n  }\r\n\r\n  const setCurrentSlide = (newIndex) => {\r\n    let newDirection\r\n    if (newIndex > imgSlideIndex) {\r\n      newDirection = 1\r\n    } else {\r\n      newDirection = -1\r\n    }\r\n\r\n    setZoomIdx(newIndex)\r\n\r\n    setImgSlideIndex([newIndex, newDirection])\r\n\r\n    if (emblaApi) {\r\n      emblaApi.scrollTo(newIndex)\r\n    }\r\n  }\r\n\r\n  const dispatchOpenEvent = () => {\r\n    if (props.onOpen) {\r\n      props.onOpen(slideIndex, images[slideIndex]);\r\n    }\r\n  }\r\n\r\n  const dispatchCloseEvent = () => {\r\n    if (props.onClose) {\r\n      props.onClose(slideIndex)\r\n    }\r\n  }\r\n\r\n  const dispatchNextImgEvent = (newIndex) => {\r\n    if (props.onNext) {\r\n      props.onNext(newIndex, images[newIndex])\r\n    }\r\n  }\r\n\r\n  const dispatchPrevImgEvent = (newIndex) => {\r\n    if (props.onPrev) {\r\n      props.onPrev(newIndex, images[newIndex])\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    //reset zoom ref\r\n    setZoomIdx(0)\r\n\r\n    if (isBrowserFullScreen) {\r\n      exitFullScreen()\r\n    }\r\n\r\n    // ensure slideshow is paused\r\n    if (isSlideshowPlaying) {\r\n      setIsSlideshowPlaying(false)\r\n    }\r\n\r\n    setShowModal(false)\r\n    setIsOpen(false)\r\n    setCarouselReady(false)\r\n    setEmblaReinitialized(false)\r\n    if (prevFocusedElem) prevFocusedElem?.focus();\r\n  }\r\n\r\n  const openModal = (num) => {\r\n\r\n    if (emblaApi) { \r\n      emblaApi.reInit();\r\n      if (emblaThumbsApi) {\r\n        emblaThumbsApi?.scrollTo(emblaApi.selectedScrollSnap())\r\n      }\r\n    }\r\n    setImgSlideIndex([num, 1])\r\n    setShowModal(true)\r\n    setIsOpen(true)\r\n\r\n  }\r\n\r\n  const setItemLoaded = (index) => {\r\n\r\n    if (props.images) {\r\n      setImages(images =>\r\n        images.map((img, i) => index === i ? {\r\n          ...img,\r\n          loaded: true\r\n        } : img)\r\n      )\r\n    }\r\n  }\r\n\r\n  const setImagesItemLoaded = (index) => {\r\n    setImages(images =>\r\n      images.map((img, i) => index === i ? {\r\n        ...img,\r\n        loaded: true\r\n      } : img)\r\n    )\r\n  }\r\n\r\n  const resetMedia = (slide_index) => {\r\n    resetVideo(slide_index)\r\n    resetImage()\r\n  }\r\n\r\n  const initSlide = (newSlideIndex) => {\r\n    setImgSlideIndex([newSlideIndex, 1])\r\n    let wrap_slide_index = wrapNums(0, images.length, newSlideIndex)\r\n    setZoomIdx(wrap_slide_index)\r\n    initLoader(wrap_slide_index)\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    scrollNext();\r\n    initSlide( imgSlideIndex + 1);\r\n  }\r\n\r\n  const prevSlide = () => {\r\n    scrollPrev()\r\n    initSlide(imgSlideIndex - 1)\r\n  }\r\n\r\n  const setThumbnailStartIndex = (index) => {\r\n    let thumbnailSwipeOptionConfig = thumbnailSwipeOptions;\r\n    thumbnailSwipeOptionConfig.startIndex = index\r\n    setThumbnailSwipeOptions(thumbnailSwipeOptionConfig)\r\n  }\r\n\r\n  const openModalWithSlideNum = (index) => {\r\n    let reactSwipeOptionConfig = reactSwipeOptions\r\n    reactSwipeOptionConfig.startIndex = index\r\n    setReactSwipeOptions(reactSwipeOptionConfig)\r\n    setThumbnailStartIndex(index)\r\n    setZoomIdx(index)\r\n    openModal(index)\r\n  }\r\n\r\n  const saveImage = () => {\r\n    if (props.images.length > 0) {\r\n      if (props.images[slideIndex].original) {\r\n        saveAs(props.images[slideIndex].original, 'image.jpg')\r\n      } else {\r\n        saveAs(props.images[slideIndex]['src'], 'image.jpg')\r\n      }\r\n    } else {\r\n      if (images[slideIndex].src) {\r\n        saveAs(images[slideIndex].src!, 'image.jpeg')\r\n      }\r\n    }\r\n  }\r\n\r\n  const playSlideshow = () => {\r\n    setMagnifyingGlass(false)\r\n    if (isRTL) {\r\n      updateImageSlideshow(-1)\r\n    } else {\r\n      updateImageSlideshow(1)\r\n    }\r\n    setIsSlideshowPlaying(true)\r\n  }\r\n\r\n  const stopSlideshow = () => {\r\n    setIsSlideshowPlaying(false)\r\n  }\r\n\r\n  const resetVideo = (slide_index) => {\r\n    if (props.images) {\r\n      let elem = props.images[slide_index]\r\n      if (elem) {\r\n        if ( elem.type == 'htmlVideo') {\r\n          videoReferences.current[slide_index].pause()\r\n        }\r\n        else if (elem.type == \"yt\") {\r\n          videoElements[slide_index].target.pauseVideo()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const getImageThumbnail = (img, index, isNextJS) => {\r\n    return (\r\n      <div key={\"thumbnail_slide_\" + index} className={`${styles.embla_thumbs__slide}`}>\r\n\r\n      <img\r\n        className={`${styles.thumbnail} imageModal`}\r\n        src={isNextJS == true ? getThumbnailImgSrcNext(img, index) : getThumbnailImgSrc(img, index)}\r\n        alt={img.alt}\r\n        onLoad={() => setImagesLoaded(true)}\r\n        style={\r\n          slideIndex === index\r\n            ? { border: thumbnailBorder }\r\n            : { border: inactiveThumbnailBorder }\r\n        }\r\n        key={\"thumbnail_\" + index}\r\n        onClick={() => {\r\n          thumbnailClick(index);\r\n        }}\r\n      />\r\n  </div>\r\n    )\r\n  }\r\n\r\n  const resetImage = () => {\r\n    if (enableMagnifyingGlass) {\r\n      initMagnifyingGlass()\r\n    } else {\r\n      if (zoomReferences.current[zoomIdx] != null) {\r\n        zoomReferences.current[zoomIdx]!.resetTransform()\r\n      }\r\n    }\r\n  }\r\n\r\n  const getThumbnailImgSrc = (img, index) => {\r\n    if (isVideo(index) && img.thumbnail) {\r\n      return img.thumbnail\r\n    } else {\r\n      return img.src\r\n    }\r\n  }\r\n\r\n  const getThumbnailImgSrcNext = (img, index) => {\r\n    if (isVideo(index)) {\r\n      return img.thumbnail\r\n    } else {\r\n      let img_src = img.src\r\n      if (\r\n        typeof img_src === 'object' &&\r\n        !Array.isArray(img_src) &&\r\n        img_src !== null\r\n      ) {\r\n        return img_src.src\r\n      } else {\r\n        return img_src\r\n      }\r\n    }\r\n  }\r\n\r\n  const isAnimImageComponent = () => {\r\n    if (images) {\r\n      if (images.length == 1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const initWrapperClassname = () => {\r\n    let classNameStr = \"\";\r\n    if (isAnimImageComponent()) {\r\n        if (props.imgWrapperClassName) {\r\n          classNameStr += `${props.imgWrapperClassName} `\r\n        }\r\n    }\r\n    else if (props.className) {\r\n        classNameStr += `${props.className} `\r\n    }\r\n    \r\n    classNameStr += `${styles.lightboxjs}`;\r\n    \r\n    return classNameStr;\r\n  }\r\n\r\n  const initStyling = () => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        setBackgroundColor(themes[props.theme].background)\r\n        // setIconColor(themes[props.theme].iconColor)\r\n        // setThumbnailBorder(themes[props.theme].thumbnailBorder)\r\n        setTextColor(themes[props.theme].textColor)\r\n      }\r\n    }\r\n\r\n    if (props.fullScreen) {\r\n      if (props.fullScreen == true) {\r\n        setImgAnimation('fade')\r\n        setIsRounded(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const imageSlideElement = (index) => {\r\n    let imageElem;\r\n    if (!props.images) {\r\n      imageElem = (\r\n        <img\r\n        className={`imageModal ${styles.embla__slide__img}\r\n        ${props.fullScreen\r\n          ? styles.fullScreenLightboxImg\r\n          : styles.lightbox_img\r\n          } \r\n        ${enableMagnifyingGlass\r\n            ? styles.maxWidthFull\r\n            : styles.maxWidthWithoutMagnifier\r\n          } `}\r\n          style={getImageStyle()}\r\n          ref={imageRef}\r\n          loading='lazy'\r\n          src={\r\n            images[index].original ? images[index].original : images[index].src\r\n          }\r\n          onLoad={() => {\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n\r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n          }}\r\n          id='img'\r\n        />\r\n\r\n      )\r\n    } else if (props.images && props.render) {\r\n      imageElem = props.render.imgSlide(props.images[index])\r\n    } else {\r\n      let img_link\r\n\r\n      // check if object (Next.js local image imports are passed as objects with a src attribute)\r\n      if (props.images) {\r\n        if (\r\n          typeof images[index].src === 'object' &&\r\n          !Array.isArray(images[index].src) &&\r\n          images[index].src !== null\r\n        ) {\r\n          img_link = images[index].src?.src\r\n        } else if (props.coverImageInLightbox == true) {\r\n          img_link = images[index].src\r\n        } else {\r\n          img_link = images[index].src\r\n        }\r\n      }\r\n\r\n\r\n      imageElem = (\r\n        <img\r\n        className={`imageModal ${styles.embla__slide__img}\r\n        ${props.fullScreen\r\n          ? styles.fullScreenLightboxImg\r\n          : styles.lightbox_img\r\n          } \r\n        ${enableMagnifyingGlass\r\n            ? styles.maxWidthFull\r\n            : styles.maxWidthWithoutMagnifier\r\n          } `}\r\n          ref={imageRef}\r\n          loading='lazy'\r\n          style={getImageStyle()}\r\n          src={\r\n            images[index].original\r\n              ? images[index].original\r\n              : img_link\r\n          }\r\n          onLoad={() => {\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n\r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n          }}\r\n          id='img'\r\n        />\r\n      )\r\n    }\r\n\r\n    return imageElem\r\n  }\r\n\r\n  const isPanningDisabled = () => {\r\n    if (isMobile && zoomedIn == false) {\r\n      return true;\r\n    }\r\n    if (isMobile && zoomedIn) {\r\n      return false;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  const getLightboxElem = (index) => {\r\n    if (isVideo(index))  {\r\n      return videoSlideElement(index) \r\n    }\r\n    else if (isPictureElement(index)) {\r\n      let elem_metadata = props.images[index][\"picture\"];\r\n      return <picture  className={`imageModal \r\n      ${props.fullScreen\r\n        ? styles.fullScreenLightboxImg\r\n        : styles.lightbox_img\r\n        } \r\n      ${enableMagnifyingGlass\r\n          ? styles.maxWidthFull\r\n          : styles.maxWidthWithoutMagnifier\r\n        } `}>\r\n            {Object.keys(elem_metadata).map((format) => (\r\n                <source\r\n                    type={format}\r\n                    key={format}\r\n                    srcSet={elem_metadata[format].srcSet}\r\n                />\r\n            ))}\r\n            <img src={elem_metadata['fallback']} />\r\n        </picture>\r\n    }\r\n    else {\r\n\r\n      if ((images && props.render) ||\r\n      frameworkID == 'next') {\r\n        return imageSlideElement(index);\r\n      }\r\n      else {\r\n          return <img\r\n          className={`imageModal ${styles.embla__slide__img}\r\n          ${props.fullScreen\r\n            ? styles.fullScreenLightboxImg\r\n            : styles.lightbox_img\r\n            } \r\n          ${enableMagnifyingGlass\r\n              ? styles.maxWidthFull\r\n              : styles.maxWidthWithoutMagnifier\r\n            } `}\r\n          ref={imageRef}\r\n          key={index}\r\n          loading='lazy'\r\n          style={getImageStyle()}\r\n          src={\r\n            images && images[index].original\r\n              ? images[index].original\r\n              : images[index].src\r\n          }\r\n          onLoad={() => {\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n  \r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n          }}\r\n          id='img'\r\n        />\r\n          \r\n      }\r\n    }\r\n  }\r\n\r\n  const isVideo = (index) => {\r\n\r\n    if (props.images) {\r\n      let elem = props.images[index]\r\n      if (elem) {\r\n        if (elem.type == 'yt' || elem.type == 'htmlVideo') {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const isPictureElement = (index) => {\r\n    if (props.images) {\r\n      let elem = props.images[index]\r\n      if (elem) {\r\n        if (elem.picture) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!emblaApi) return \r\n    //emblaApi.reInit() // If the slides prop changes, pick it up\r\n  }, [\r\n    carouselReady, emblaApi\r\n  ])\r\n\r\n  const isHTMLVideo = (index) => {\r\n    if (props.images) {\r\n      if (props.images && props.images[index].type == 'htmlVideo') {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const videoSlideElement = (index) => {\r\n    let elem = props.images[index];\r\n    let videoElem;\r\n\r\n    if (elem.type == 'yt') {\r\n      videoElem = (\r\n        <div className={`${styles.videoOuterContainer} imageModal`}>\r\n          <YouTube\r\n            videoId={elem.videoID}                 \r\n            ref={(el) => (videoReferences.current[index] = el)}\r\n            iframeClassName={`${styles.ytVideo}`}                                          \r\n            title='YouTube video player'\r\n            opts={{\r\n              height: getVideoHeight(elem),\r\n                width: getVideoWidth(elem),\r\n                playerVars: {\r\n                  // https://developers.google.com/youtube/player_parameters\r\n                  autoplay: shouldAutoplay(elem) ? 1 : 0,\r\n                }\r\n              }\r\n            }\r\n            // style={object}\r\n            // className={`${styles.ytVideo}`}\r\n            //loading={string}                     \r\n            onReady={(event) => {let videoElems = videoElements; videoElems[index] = event; setVideoElements(videoElems);\r\n                if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n            setItemLoaded(index)}}                    \r\n            onPlay={(event) => {\r\n              setYTVideoCurrentlyPlaying(true)\r\n            }}                   \r\n            onPause={(event) => {             \r\n            setYTVideoCurrentlyPlaying(false)\r\n            }}                      \r\n            onEnd={(event) => { setYTVideoCurrentlyPlaying(false)}}                        \r\n            onError={(event) => {}}                      \r\n            onStateChange={(event) => {}}               \r\n            onPlaybackRateChange={(event) => {}}        \r\n            onPlaybackQualityChange={(event) => {}}    \r\n          />\r\n\r\n          {/* Previously used iframe to create YouTube video embed */}\r\n          {/* <iframe\r\n            src={`https://www.youtube.com/embed/${elem.videoID}?${shouldAutoplay(elem) ? 'autoplay=1' : ''\r\n              }`}\r\n\r\n            frameBorder='0'\r\n            allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\r\n            allowFullScreen\r\n            \r\n          ></iframe> */}\r\n        </div>\r\n      )\r\n    } else if (elem.type == 'htmlVideo') {\r\n      videoElem = (\r\n        <div\r\n          className={`${styles.htmlVideo} ${styles.htmlVideoOuterContainer} imageModal`}\r\n        >\r\n          <video\r\n            className={`${styles.cursorPointer} ${styles.lightboxVideo}`}\r\n            width={getVideoWidth(elem)}\r\n            ref={(el) => (videoReferences.current[index] = el)}\r\n            onPlay={() => {\r\n            }}\r\n            height={getVideoHeight(elem)}\r\n            autoPlay={index == imgSlideIndex ? shouldAutoplay(elem) : false}\r\n            controls\r\n          >\r\n            <source\r\n              src={elem.videoSrc}\r\n              type='video/mp4'\r\n              onLoad={() => {\r\n                setItemLoaded(index)\r\n              }}\r\n            />\r\n          </video>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return videoElem\r\n  }\r\n\r\n  const initZoom = (ref) => {\r\n    \r\n    if (ref.state.scale <= 1.65) {\r\n      setZoomedIn(false)\r\n    }\r\n    else {\r\n      setZoomedIn(true)\r\n    }\r\n  }\r\n\r\n  const regularImgPaneNodes = Array.apply(null, Array(images.length)).map(\r\n    (_, index) => {\r\n      return (\r\n        <div key={index}>\r\n          {\r\n          \r\n          enableMagnifyingGlass == true ? (\r\n             <Magnifier\r\n               src={images[index].src!}\r\n               className={`${styles.magnifyWrapper} ${styles.lightbox_img}`}\r\n               height={imgContainHeight}\r\n               width={imgContainWidth}\r\n               mgShowOverflow={false}\r\n             />\r\n          ) \r\n          \r\n          : ( \r\n            <div className={`${styles.embla__slide}`}>\r\n              <TransformWrapper\r\n                ref={(el) => (zoomReferences.current[index] = el)}\r\n                onWheel={(ref, wheelEvent) => {\r\n                  initZoom(ref)\r\n                }}\r\n                disabled={disableZoom}\r\n                panning={{\r\n                  disabled: isPanningDisabled()\r\n                }}                \r\n                \r\n                key={index}\r\n                onZoom={\r\n                  (ref, event) => {\r\n                    initZoom(ref)\r\n                  }\r\n                }\r\n                onZoomStop={(ref, event) => {initZoom(ref)}}\r\n                onTransformed={\r\n                  (ref, event) => {\r\n                    initZoom(ref)\r\n                  }\r\n                }\r\n                onPinchingStop={(ref, event) => {\r\n                  initZoom(ref)\r\n                }}\r\n                centerZoomedOut={true}\r\n                initialScale={1}\r\n                alignmentAnimation={{ sizeX: 0, sizeY: 0 }}\r\n              >\r\n                <TransformComponent\r\n                  wrapperStyle={{\r\n                    maxWidth: '100vw',\r\n                    height: '100vh',\r\n                    margin: 'auto'\r\n                  }}\r\n                  contentStyle={\r\n                    props.fullScreen\r\n                      ? {\r\n                        maxWidth: '100vw',\r\n                        height: '100vh',\r\n                        marginLeft: 'auto',\r\n                        marginRight: 'auto'\r\n                      }\r\n                      : {\r\n                        maxWidth: '100vw',\r\n                        height: '100vh',\r\n                        margin: 'auto',\r\n                        display: 'grid'\r\n                      }\r\n                  }\r\n                  key={index}\r\n                >\r\n                  <div\r\n                    className={`${props.fullScreen\r\n                      ? styles.slideshow_img_fullscreen\r\n                      : styles.slideshow_img\r\n                      } ${props.lightboxImgClass ? props.lightboxImgClass : \"\"}`}\r\n                  >\r\n                    {getLightboxElem(index)}\r\n                  </div>\r\n                </TransformComponent>\r\n              </TransformWrapper>\r\n            </div>\r\n          )} \r\n        </div>\r\n      )\r\n    }\r\n  )\r\n\r\n  const initMagnifyingGlass = () => {\r\n    if (!enableMagnifyingGlass) {\r\n      initImageDimensions()\r\n    } else {\r\n      setImgAnimation('imgDrag')\r\n    }\r\n    setMagnifyingGlass(!enableMagnifyingGlass)\r\n  }\r\n\r\n  const initImageDimensions = () => {\r\n    let img\r\n    if (imgSlideIndex == 0 || imgSlideIndex % images.length == 0) {\r\n      img = document.getElementById('img')\r\n    } else {\r\n      img = imageRef.current\r\n    }\r\n\r\n    var ratio = img.naturalWidth / img.naturalHeight\r\n    var width = img.height * ratio\r\n    var height = img.height\r\n    if (width > img.width) {\r\n      width = img.width\r\n      height = img.width / ratio\r\n    }\r\n\r\n    setImgContainHeight(height)\r\n    setImgContainWidth(width)\r\n  }\r\n\r\n\r\n  const initFullScreenChangeEventListeners = () => {\r\n    document.addEventListener('fullscreenchange', exitFullScreenHandler)\r\n    document.addEventListener('webkitfullscreenchange', exitFullScreenHandler)\r\n    document.addEventListener('MSFullscreenChange', exitFullScreenHandler)\r\n    document.addEventListener('mozfullscreenchange', exitFullScreenHandler)\r\n  }\r\n\r\n  const removeFullScreenChangeEventListeners = () => {\r\n    document.removeEventListener('fullscreenchange', exitFullScreenHandler)\r\n    document.removeEventListener(\r\n      'webkitfullscreenchange',\r\n      exitFullScreenHandler\r\n    )\r\n    document.removeEventListener('MSFullscreenChange', exitFullScreenHandler)\r\n    document.removeEventListener('mozfullscreenchange', exitFullScreenHandler)\r\n  }\r\n\r\n  const initEventListeners = () => {\r\n    if (isBrowser()) {\r\n      window.addEventListener('resize', handleWindowResize)\r\n    }\r\n  }\r\n\r\n  const removeEventListeners = () => {\r\n    removeOnSelectListener();\r\n    if (isBrowser()) {\r\n      window.removeEventListener('resize', handleWindowResize)\r\n    }\r\n  }\r\n\r\n  const setReducedMotion = (mediaQuery) => {\r\n    if (mediaQuery.matches) {\r\n      setImgAnimation('fade')\r\n    }\r\n  }\r\n\r\n  // Check if the user has a preference for reduced motion\r\n  // If so, the image animation transitions between slides in the slideshow will be adjusted\r\n  // to account for this\r\n  const checkAndInitReducedMotion = () => {\r\n    let reducedMotionMediaQuery: any = ''\r\n\r\n    if (isBrowser()) {\r\n      reducedMotionMediaQuery = window.matchMedia(\r\n        '(prefers-reduced-motion: reduce)'\r\n      )\r\n\r\n      if (!reducedMotionMediaQuery || reducedMotionMediaQuery.matches) {\r\n        setImgAnimation('fade')\r\n      }\r\n\r\n      reducedMotionMediaQuery.addEventListener(\r\n        'change',\r\n        setReducedMotion(reducedMotionMediaQuery)\r\n      )\r\n    }\r\n\r\n    return reducedMotionMediaQuery\r\n  }\r\n\r\n   const initPropsForControlIcons = () => {\r\n     if (props.showFullScreenIcon != undefined) {\r\n        setDisplayFullScreenIcon(props.showFullScreenIcon)\r\n      }\r\n     if (props.showThumbnailIcon != undefined) {\r\n        setDisplayThumbnailIcon(props.showThumbnailIcon)\r\n     }\r\n\r\n     if (props.showSlideshowIcon != undefined) {\r\n       setDisplaySlideshowIcon(props.showSlideshowIcon)\r\n     }\r\n     if (props.showMagnificationIcons != undefined) {\r\n       setDisplayMagnificationIcons(props.showMagnificationIcons)\r\n     }\r\n   }\r\n\r\n  const initProps = () => {\r\n    if (props.showControls != undefined) {\r\n        setShowControls(props.showControls)\r\n        if (props.showControls == false) {\r\n          setDisplayMagnificationIcons(false)\r\n        }\r\n    }\r\n\r\n    initPropsForControlIcons()\r\n\r\n    if (props.disableImageZoom) {\r\n      setDisableZoom(props.disableImageZoom)\r\n    }\r\n\r\n    if (isBrowser()) {\r\n      setWidth(window.innerWidth)\r\n    }\r\n\r\n    if (window.innerWidth <= mobileWidth) {\r\n      setImgAnimation('fade')\r\n    }\r\n  }\r\n\r\n  // Slideshow feature; if isSlideshowPlaying set to true, then slideshow cycles through images\r\n  useInterval(\r\n    () => {\r\n      if (isRTL) {\r\n        updateImageSlideshow(-1)\r\n      } else {\r\n        updateImageSlideshow(1)\r\n      }\r\n    },\r\n\r\n    // Delay in milliseconds or null to stop it\r\n    isSlideshowPlaying ? slideshowInterval : null\r\n  )\r\n\r\n  const openFullScreen = (lightbox_elem) => {\r\n    if (lightbox_elem.requestFullscreen) {\r\n      lightbox_elem.requestFullscreen();\r\n    }\r\n\r\n    /* Safari */\r\n    else if (lightbox_elem.webkitRequestFullscreen) {\r\n      lightbox_elem.webkitRequestFullscreen();\r\n    }\r\n\r\n    /* Internet Explorer */\r\n    else if (lightbox_elem.msRequestFullscreen) {\r\n      lightbox_elem.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  const closeFullScreen = (document) => {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    }\r\n\r\n    /* Safari */\r\n    else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n\r\n    /* Internet Explorer */\r\n    else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  }\r\n\r\n  const isBrowser = () => typeof window !== \"undefined\"\r\n\r\n  const initRTLImages = () => {\r\n    // flip images array\r\n    let imagesMetadataCopy = props.images\r\n    imagesMetadataCopy.reverse()\r\n\r\n    setImages(imagesMetadataCopy)\r\n\r\n    if (images.length > 0) {\r\n      let imagesRTLCopy = images\r\n      imagesRTLCopy.reverse()\r\n      setImages(imagesRTLCopy)\r\n    }\r\n  }\r\n\r\n  const initImages = (isMounted, updateImages) => {\r\n \r\n    if (coverMode && props.images) {\r\n      if (props.coverImageInLightbox == false) {\r\n        let filterImages = props.images.filter((img) => img.cover != true)\r\n        setImages(filterImages)\r\n      } else {\r\n        setImages(props.images)\r\n      }\r\n    }\r\n\r\n    if (updateImages || !isInit) {\r\n      if (lightboxIdentifier && props.children) {\r\n\r\n        let img_gallery: NodeListOf<HTMLImageElement> = document.querySelectorAll(\r\n          `[data-lightboxjs=${lightboxIdentifier}]`\r\n        )\r\n        let originalImageAttr = false;\r\n        \r\n        \r\n        let img_elements: ImageElement[] = []\r\n        if (img_gallery.length > 0) {\r\n          for (let i = 0; i <= img_gallery.length - 1; i++) {\r\n            let img = img_gallery[i]\r\n\r\n            let attr_val = img.getAttribute('data-lightboxjs')\r\n            if (attr_val == lightboxIdentifier) {\r\n              img.addEventListener(\r\n                'click',\r\n                () => {\r\n                  let index\r\n\r\n                  if (isRTL) {\r\n                    index = getRTLIndex(img_gallery.length, i)\r\n                  } else {\r\n                    index = i\r\n                  }\r\n\r\n                  let reactSwipeOptionConfig = reactSwipeOptions\r\n                  reactSwipeOptionConfig.startIndex = index\r\n\r\n                  if (isMounted) setReactSwipeOptions(reactSwipeOptionConfig)\r\n                  setZoomIdx(index)\r\n                  openModal(index)\r\n                },\r\n                false\r\n              )\r\n              img.classList.add('cursor-pointer')\r\n\r\n              let original_img_src = img.getAttribute('data-lightboxjs-original')\r\n\r\n              if (original_img_src) {\r\n                img_elements.push({\r\n                  src: original_img_src,\r\n                  alt: img.alt,\r\n                  loaded: false\r\n                })\r\n                originalImageAttr = true;\r\n              }\r\n              else if (img.src) {\r\n                img_elements.push({\r\n                  src: img.src,\r\n                  alt: img.alt,\r\n                  loaded: false\r\n                })\r\n              } else if (img.tagName == 'DIV') {\r\n                let corresponding_img_item = props.images[i]\r\n                let img_src = corresponding_img_item.src\r\n                let img_alt = corresponding_img_item.alt\r\n                img_elements.push({\r\n                  src: img_src,\r\n                  alt: img_alt,\r\n                  loaded: false\r\n                })\r\n              }\r\n            }\r\n          }\r\n          if (isMounted && !coverMode) {\r\n            if (originalImageAttr) {\r\n              setImages(img_elements) \r\n\r\n            }\r\n            else if ( props.showAllImages != true && props.framework != \"next\") {\r\n              setImages(img_elements) \r\n            } \r\n            else if (props.framework == \"next\" && !originalImageAttr) {\r\n              setImages(props.images)\r\n            }\r\n            else {\r\n              setImages(props.images)\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (props.images) {\r\n            setImages(props.images)\r\n\r\n          }\r\n        }\r\n      }\r\n      else if (lightboxIdentifier && props.images && !props.children) {\r\n        setImages(props.images)\r\n\r\n      }\r\n      else if (!lightboxIdentifier && props.images && !props.children) {\r\n        setImages(props.images)\r\n      }\r\n\r\n      // otherwise, if no lightbox identifier or custom render method\r\n      else if (!props.render) {\r\n        let imgArray: any = [];\r\n        // only one image\r\n        if (!Array.isArray(props.children)) {\r\n          imgArray.push(props.children);\r\n        }\r\n\r\n        // multiple images\r\n        else {\r\n          imgArray = props.children;\r\n        }\r\n        \r\n        let imgs: ImageElement[] = []\r\n        for (let k = 0; k < imgArray.length; k++) {\r\n          let img_elem = imgArray[k]\r\n          let img_obj = {\r\n            src: img_elem.props.src,\r\n            alt: img_elem.props.alt,\r\n            loaded: false\r\n          }\r\n          imgs.push(img_obj)\r\n        }\r\n        if (isRTL) {\r\n          imgs.reverse()\r\n        }\r\n        if (isMounted) setImages(imgs)\r\n\r\n        setPreviewImageElems(imgArray)\r\n\r\n      } else {\r\n        if (isMounted) { setImages(props.images);}\r\n      }\r\n\r\n      if (isMounted) setIsInit(true)\r\n    }\r\n  }\r\n\r\n  const dispatchSlideSelectEvents = (newIndex, prevIndex) => {\r\n\r\n    if (newIndex == 0 && prevIndex == images.length - 1) {\r\n      dispatchNextImgEvent(newIndex)\r\n    }\r\n    else if (newIndex == images.length - 1 && prevIndex == 0) {\r\n      dispatchPrevImgEvent(newIndex)\r\n    }\r\n\r\n    else if (newIndex > prevIndex) {\r\n      dispatchNextImgEvent(newIndex)\r\n    }\r\n    else if (newIndex < prevIndex) {\r\n      dispatchPrevImgEvent(newIndex)\r\n    }\r\n    \r\n  }\r\n\r\n  const onSelect = useCallback(() => {\r\n\r\n    if (!emblaApi) return\r\n\r\n    let newSlideIndex: any = emblaApi.selectedScrollSnap();\r\n    let prevSlideIndex: any = emblaApi.previousScrollSnap();\r\n\r\n    if (newSlideIndex != prevSlideIndex) {\r\n      initSlide(newSlideIndex);\r\n      resetMedia(prevSlideIndex);\r\n      dispatchSlideSelectEvents(newSlideIndex, prevSlideIndex)\r\n    }\r\n\r\n    if (emblaThumbsApi) {\r\n    emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap())\r\n    }\r\n\r\n  }, [emblaApi, emblaThumbsApi])\r\n\r\n  const onReinit = useCallback(() => {\r\n    if (!emblaApi) return\r\n    setEmblaReinitialized(true)\r\n\r\n  }, [emblaApi, emblaReinitialized])\r\n\r\n\r\n  const handleResize = (entry) => {\r\n    emblaApi?.reInit();\r\n  };\r\n\r\n  const rootNode = emblaApi?.rootNode() || null;\r\n  useResizeObserver(rootNode, handleResize);\r\n\r\n  const removeOnSelectListener = useCallback(() => {   \r\n     if (emblaApi) emblaApi.off('select', onSelect)  \r\n  }, [emblaApi, onSelect])\r\n\r\n  useEffect(()=>{ \r\n    if (emblaApi) {\r\n      if (zoomedIn) {\r\n        emblaApi.reInit({draggable: false});\r\n      }\r\n      else {\r\n        emblaApi.reInit({draggable: true});\r\n      }\r\n    } \r\n  }, [zoomedIn])\r\n\r\n  useEffect(() => {\r\n      if (!emblaApi) return \r\n\r\n      if (showModal) emblaApi.reInit()\r\n    }, [ showModal, emblaApi])\r\n\r\n\r\n  useEffect(() => {    \r\n    if (emblaApi) emblaApi.on('select', onSelect)  \r\n    if (emblaApi) {}\r\n  }, [emblaApi, onSelect])\r\n\r\n  useEffect(() => {    \r\n    if (emblaApi) emblaApi.on('reInit', onReinit)  \r\n  }, [emblaApi, onReinit])\r\n\r\n  // update theme if prop changes\r\n  useEffect(() => {\r\n    initStyling();\r\n    if (props.iconColor) { setIconColor(props.iconColor) }\r\n    if (props.backgroundColor) { setBackgroundColor(props.backgroundColor) }\r\n\r\n  }, [props.theme, props.iconColor, props.backgroundColor]);\r\n\r\n  useEffect(() => {\r\n    initImages(true, true)\r\n  }, [props.images, props.displayedImages]);\r\n\r\n\r\n  useEffect(() => {\r\n    let slideNum = 0;\r\n    if (props.open) {\r\n      if (props.startingSlideIndex) {\r\n        if (props.startingSlideIndex < images.length && (props.startingSlideIndex >= 0)) {\r\n          slideNum = props.startingSlideIndex;\r\n        }\r\n        else {\r\n          slideNum = 0\r\n        }\r\n      }\r\n\r\n      openModalWithSlideNum(slideNum)\r\n    }\r\n    else if (props.open == false) {\r\n      closeModal()\r\n    }\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen == true) {\r\n      dispatchOpenEvent()\r\n    }\r\n    else {\r\n      dispatchCloseEvent()\r\n    }\r\n\r\n  }, [isOpen])\r\n\r\n  useEffect(() => {\r\n\r\n    // Error check\r\n    if (props.render) {\r\n      if (!props.images) {\r\n        console.error(\r\n          'Array of images must be passed to `SlideshowLightbox` (with the `images` prop) if using custom render method. '\r\n        )\r\n      }\r\n    }\r\n\r\n    let isMounted = true\r\n    if (isMounted) initProps()\r\n\r\n    if (coverMode && props.images) {\r\n      if (props.coverImageInLightbox == false) {\r\n        let filterImages = props.images.filter((img) => img.cover != true)\r\n        setImages(filterImages)\r\n      } else {\r\n        setImages(props.images)\r\n      }\r\n    }\r\n\r\n    if (isMounted) {\r\n      initEventListeners()\r\n    }\r\n\r\n    let reducedMotionMediaQuery = checkAndInitReducedMotion()\r\n\r\n    if (!isInit) {\r\n      initImages(isMounted, false);\r\n\r\n      if (props.images && isRTL == true) {\r\n        initRTLImages();\r\n      }\r\n    }\r\n\r\n    if (isMounted) initStyling()\r\n\r\n    return () => {\r\n      isMounted = false\r\n      removeEventListeners()\r\n      reducedMotionMediaQuery.removeEventListener(\r\n        'change',\r\n        reducedMotionMediaQuery\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  return <div>\r\n    <div className={`${initWrapperClassname()}`}>\r\n      {props.images && props.children && lightboxIdentifier == false\r\n        ? props.children\r\n        : null}\r\n\r\n      {props.images && lightboxIdentifier == false\r\n        ? props.images.map((elem, index) => (\r\n          <img\r\n          className={`${props.imgClassName ? props.imgClassName : ''\r\n          } ${styles.cursorPointer}`}\r\n\r\n            src={!isVideo(index) ? elem.src : elem.thumbnail}\r\n            // src={isSrcStr(elem.src) ? elem.src : elem.src.src}\r\n            onClick={() => {\r\n              let img_index\r\n\r\n              if (isRTL) {\r\n                img_index = getRTLIndex(props.images.length, index)\r\n              } else {\r\n                img_index = index\r\n              }\r\n\r\n              openModalWithSlideNum(img_index)\r\n            }}\r\n            key={index}\r\n          />\r\n        ))\r\n        : null}\r\n\r\n      {/* IF Lightbox identifier provided or props.images provided AND props.children */}\r\n      {lightboxIdentifier != false && props.children && coverMode == false\r\n        ? props.children\r\n        : null}\r\n\r\n      {/* {lightboxIdentifier != false && !props.children && coverMode == false\r\n        ? <h1>images</h1>\r\n        : null} */}\r\n\r\n      {(lightboxIdentifier == false && props.images) || coverMode == true\r\n        ? null\r\n        : // No lightbox identifier provided or no cover mode\r\n        previewImageElems\r\n          .filter((elem) => elem.type == 'img')\r\n          .map((elem, index) => (\r\n            <img\r\n              {...elem.props}\r\n              className={`${elem.props.className ? elem.props.className : ''\r\n                } ${styles.cursorPointer}`}\r\n              onClick={() => {\r\n                let img_index\r\n\r\n                if (isRTL) {\r\n                  img_index = getRTLIndex(previewImageElems.length, index)\r\n                } else {\r\n                  img_index = index\r\n                }\r\n\r\n                openModalWithSlideNum(img_index)\r\n              }}\r\n              key={index}\r\n            />\r\n          ))}\r\n\r\n      {coverMode ? props.children : false}\r\n      \r\n      <AnimateSharedLayout type='crossfade'>\r\n\r\n        <AnimatePresence initial={false} exitBeforeEnter={true}>\r\n          {showModal !== false && (\r\n            <Portal>\r\n              <Div100vh>\r\n                <motion.div\r\n                  className={`${styles.slideshowAnimContainer}`}\r\n                  key='slideshowAnimContainer'\r\n                  id='slideshowAnim'\r\n                  style={{\r\n                    backgroundColor: backgroundColor,\r\n                  }}\r\n                  initial={\"inactive\"}\r\n                  variants={variants}\r\n                  animate={showModal ? \"active\" : \"inactive\"}   \r\n                  exit={\"inactive\"}         \r\n                  transition={\r\n                    {duration: \"0.3\"}\r\n                  }    \r\n                  onAnimationComplete={() => {\r\n                    let animEntered = !animationEntered;\r\n                    setAnimationEntered(animEntered);\r\n     \r\n                    if (animEntered == true) {\r\n                      let prevFocusedElement: any = document.activeElement;\r\n                      setPrevFocusedElem(prevFocusedElement)\r\n\r\n                      document.getElementById(\"lightboxContainer\")?.focus();\r\n                    }\r\n                    else {\r\n                      prevFocusedElem?.focus();\r\n                    }\r\n                    \r\n                  }}\r\n                  \r\n                >\r\n                  <div className={`${styles.lightboxContainer}`} id=\"lightboxContainer\" tabIndex={-1} role=\"dialog\"\r\n                   onClick={(e) => {if (modalCloseOption == \"clickOutside\") {checkModalClick(e)}}}>\r\n                    <section\r\n                      className={`${styles.iconsHeader} ${iconColor ? '' : getIconStyle()\r\n                        } imageModal`}\r\n                      style={{ color: iconColor }}\r\n                    >\r\n                       <KeyHandler\r\n                        keyValue={'ArrowLeft'}\r\n                        code={'37'}\r\n                        onKeyHandle={() => {\r\n                          prevSlide()\r\n                        }}\r\n                      /> \r\n                      <KeyHandler\r\n                        keyValue={'ArrowRight'}\r\n                        code={'39'}\r\n                        onKeyHandle={() => {\r\n                          nextSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'Escape'}\r\n                        code={'27'}\r\n                        onKeyHandle={(event) => {\r\n                          event.preventDefault();\r\n                          event.stopPropagation();\r\n                          if (!isBrowserFullScreen) {\r\n                             closeModal()\r\n                          }\r\n                        }}\r\n                      /> \r\n\r\n                      {/* Support for Internet Explorer and Edge key values  */}\r\n                      <KeyHandler\r\n                        keyValue={'Left'}\r\n                        code={'37'}\r\n                        onKeyHandle={() => {\r\n                          prevSlide()\r\n                        }}\r\n                      /> \r\n                      <KeyHandler\r\n                        keyValue={'Right'}\r\n                        code={'39'}\r\n                        onKeyHandle={() => {\r\n                          nextSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'Esc'}\r\n                        code={'27'}\r\n                        onKeyHandle={(event) => {\r\n                          event.preventDefault();\r\n                          event.stopPropagation();\r\n                          if (!isBrowserFullScreen) {\r\n                            closeModal()\r\n                          }\r\n                        }}\r\n                      />\r\n\r\n                      {showControls == true && (\r\n                        <div className={`${styles.controls}`}>\r\n                          {disableZoom ||\r\n                            displayMagnificationIcons == false ? null : \r\n                            <motion.div>\r\n                              <button onClick={() => {\r\n                                  if (enableMagnifyingGlass) {\r\n                                    initMagnifyingGlass()\r\n                                  }\r\n                                  if (zoomReferences.current[zoomIdx] != null) {\r\n                                    zoomReferences.current[zoomIdx]!.zoomIn()\r\n                                  }\r\n                                  setZoomedIn(true)\r\n                                }}>\r\n                                  <ZoomIn\r\n                                    size={24}\r\n                                    color={iconColor ? iconColor : undefined}\r\n                                    className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                      }`}\r\n                                    style={iconColor ? { color: iconColor } : {}}\r\n                                  />\r\n                              </button>\r\n\r\n                            </motion.div>\r\n                           }\r\n\r\n                          {disableZoom ||\r\n                            displayMagnificationIcons == false ? null : \r\n                            <motion.div>\r\n                              <button \r\n                              onClick={() => {\r\n                                zoomReferences.current[zoomIdx]!.zoomOut();\r\n                                let scale = zoomReferences.current[zoomIdx]!.state.scale;\r\n                                \r\n                                if (scale == 1 || scale == 1.65) {\r\n                                  setZoomedIn(false)\r\n                                }\r\n\r\n                              }}>\r\n                              <ZoomOut\r\n                                size={24}\r\n                                className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                  }`}\r\n                                style={iconColor ? { color: iconColor } : {}}\r\n                                color={iconColor ? iconColor : undefined}\r\n                                \r\n                              />\r\n                              </button>\r\n                              \r\n                            </motion.div>\r\n                          }\r\n\r\n                          {displayDownloadBtn() ? (\r\n                            <button \r\n                            onClick={() => {\r\n                              saveImage()\r\n                            }}>\r\n                            <Download\r\n                            size={24}\r\n                              className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                }`}\r\n                              style={iconColor ? { color: iconColor } : {}}\r\n                              color={iconColor ? iconColor : undefined}\r\n                             \r\n                            />\r\n                            </button>\r\n                            \r\n                          ) : null}\r\n\r\n                          {displayFullScreenIcon ? (\r\n                            isBrowserFullScreen ? (\r\n                              <motion.div>\r\n                                <button \r\n                                onClick={() => {\r\n                                  isBrowserFullScreen\r\n                                    ? exitFullScreen()\r\n                                    : fullScreen()\r\n                                }}>\r\n                                <FullscreenExit\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                  \r\n                                />\r\n                                </button>\r\n                                \r\n                              </motion.div>\r\n                            ) : (\r\n                              <motion.div>\r\n                                <button onClick={() => {\r\n                                    isBrowserFullScreen\r\n                                      ? exitFullScreen()\r\n                                      : fullScreen()\r\n                                  }}>\r\n                                <Fullscreen\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                  \r\n                                />\r\n                                </button>\r\n                                \r\n                              </motion.div>\r\n                            )\r\n                          ) : null}\r\n\r\n                          {displayThumbnailIcon ? (\r\n                            <motion.div>\r\n                              <button\r\n                               onClick={() => {\r\n                                setShowThumbnails(!showThumbnails)\r\n                              }}>\r\n                              <GridFill\r\n                                size={24}\r\n                                className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                  }`}\r\n                                style={iconColor ? { color: iconColor } : {}}\r\n                                color={iconColor ? iconColor : undefined}\r\n                               \r\n                              />\r\n                              </button>\r\n                              \r\n                            </motion.div>\r\n                          ) : null}\r\n\r\n                          {shouldDisplayMagnifyingGlassIcon() ? (\r\n                            <motion.div>\r\n                              <button\r\n                                onClick={() => initMagnifyingGlass()}\r\n                              >\r\n                              <Search\r\n                                size={24}\r\n                                className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                  }`}\r\n                                style={iconColor ? { color: iconColor } : {}}\r\n                                color={iconColor ? iconColor : undefined}\r\n                              />\r\n                              </button>\r\n                              \r\n                            </motion.div>\r\n                          ) : null}\r\n\r\n                          {shouldDisplaySlideshowIcon() ? (\r\n                            <motion.div className={styles.slideshowPlayBtn}>\r\n                              {isSlideshowPlaying ? (\r\n                                <button onClick={() => {\r\n                                  isSlideshowPlaying\r\n                                    ? stopSlideshow()\r\n                                    : playSlideshow()\r\n                                }}>\r\n                                <PauseCircleFill\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                  \r\n                                />\r\n                                </button>\r\n                                \r\n                              ) : (\r\n                                <button onClick={() => {\r\n                                  isSlideshowPlaying\r\n                                    ? stopSlideshow()\r\n                                    : playSlideshow()\r\n                                }}>\r\n                                  <PlayCircleFill\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                  \r\n                                />\r\n                                </button>\r\n                                \r\n                              )}\r\n                            </motion.div>\r\n                          ) : null}\r\n                        </div>\r\n                      )}\r\n                      <motion.div  className={`${styles.closeIcon} ${props.showControls == false ? styles.mlAuto : \"\"}`}>\r\n                        <button id=\"closeBtn\" className={styles.closeButton}\r\n                        onClick={() => {\r\n                          closeModal()\r\n                        }}>\r\n                          <XLg\r\n                          id=\"closeIcon\"\r\n                            size={24}\r\n                            className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                              }`}\r\n                            color={iconColor ? iconColor : undefined}\r\n                            style={iconColor ? { color: iconColor } : {}}\r\n                          />\r\n                        </button>\r\n                        \r\n                      </motion.div>\r\n                    </section>\r\n                    {displayArrows() ?\r\n\r\n                      <div>\r\n                        <div\r\n                          className={\r\n                            rightArrowStyle\r\n                              ? `${styles.next1} ${getArrowStyle()} imageModal`\r\n                              : \"imageModal\"\r\n                          }\r\n                          style={rightArrowStyle}\r\n                          onClick={() => {\r\n                            nextSlide()\r\n                          }}\r\n                        >\r\n                          {nextArrowElem ? nextArrowElem :\r\n                            <span className={`${props.rightArrowClassname ? props.rightArrowClassname : \"\"}`}>&#10095;</span>\r\n                          }\r\n                        </div>\r\n                        <div\r\n                          className={\r\n                            leftArrowStyle\r\n                              ? `${styles.prev1} ${getArrowStyle()} imageModal`\r\n                              : \"imageModal\"\r\n                          }\r\n                          style={leftArrowStyle}\r\n                          onClick={() => {\r\n                            prevSlide()\r\n                          }}\r\n                        >\r\n                          {prevArrowElem ? prevArrowElem :\r\n                            <span className={`${props.leftArrowClassname ? props.leftArrowClassname : \"\"}`}>&#10094;</span>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      : null\r\n                    }\r\n\r\n                    <AnimatePresence initial={false} custom={direction}>\r\n\r\n                      <div \r\n                       className={`${showThumbnails\r\n                        ? styles.slideshowInnerContainerThumbnails\r\n                        : ''\r\n                          } ${styles.embla} ${isImageCaption() ? styles.slideImageAndCaption : ''\r\n                          } \r\n                          ${props.fullScreen\r\n                            ? styles.slideshowInnerContainerFullScreen\r\n                            : styles.slideshowInnerContainer\r\n                          }  `}>\r\n                          <div className={styles.embla__viewport} ref={showModal ? emblaRef : null}>\r\n                            <div className={styles.embla__container}>\r\n\r\n                               {regularImgPaneNodes}\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                      {displayLoader == true && !isHTMLVideo(slideIndex) ? (\r\n                        <span\r\n                          key='loader'\r\n                          className={`${styles.loader\r\n                            } ${getLoaderThemeClass()}`}\r\n                        ></span>\r\n                      ) : null}\r\n                    </AnimatePresence>\r\n\r\n                    <div\r\n                      className={`${styles.thumbnailsOuterContainer} ${isImageCaption() ? styles.thumbnailsAndCaption : ''}`}\r\n                      style={\r\n                        isImageCaption()\r\n                          ? {\r\n                            backgroundColor: backgroundColor\r\n                          }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {isImageCaption() ? (\r\n                        <div className={`${styles.imgTitleContainer} imageModal`}>\r\n                          <p\r\n                            className={`${styles.imgTitle}`}\r\n                            key={'imgCaption' + slideIndex}\r\n                            style={\r\n                              props.captionStyle\r\n                                ? props.captionStyle\r\n                                : { color: textColor }\r\n                            }\r\n                          >\r\n                            {getImageCaption()}\r\n                          </p>\r\n                        </div>\r\n                      ) : null}\r\n\r\n                      <AnimatePresence initial={animatedThumbnails}>\r\n                        {showThumbnails !== false && (\r\n                          <motion.div\r\n                            initial={'hidden'}\r\n                            exit={'hidden'}\r\n                            animate={'visible'}\r\n                            style={\r\n                              imagesLoaded ? {} : { display: 'displayHidden' }\r\n                            }\r\n                            transition={{\r\n                              type: 'spring',\r\n                              duration: 0.75\r\n                            }}\r\n                            variants={thumbnailVariants}\r\n                            className={`${styles.thumbnails} ${isImageCaption()\r\n                                ? styles.thumbnailsWithCaption\r\n                                : ''\r\n                              }`}\r\n                          >\r\n                              \r\n                            <div className={`${styles.embla_thumbs} ${styles.thumbnails}`}>\r\n                            <div className={styles.embla_thumbs__viewport} ref={emblaThumbsRef}>\r\n                              <div className={styles.embla_thumbs__container}>\r\n                              {frameworkID == 'next' &&\r\n                                props.images\r\n                                ? props.images.map((img, index) => (\r\n                                  getImageThumbnail(img, index, true)\r\n                                ))\r\n                                : // Not Next.js\r\n                                images.map((img, index) => (\r\n                                  getImageThumbnail(img, index, false)\r\n                                ))}\r\n                          \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                          \r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              </Div100vh>\r\n            </Portal>\r\n          )}\r\n        </AnimatePresence>\r\n      </AnimateSharedLayout>\r\n    </div>\r\n  </div>\r\n\r\n}\r\n)","import React, { useEffect, useState, useRef } from 'react'\r\nimport { SlideshowLightbox } from './SlideshowLightbox';\r\n\r\nconst themes: any = {\r\n  day: {\r\n    background: 'white',\r\n    iconColor: 'black',\r\n    thumbnailBorder: 'solid transparent 2px',\r\n    textColor: 'black'\r\n  },\r\n  night: {\r\n    background: '#151515',\r\n    iconColor: 'silver',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\r\n    textColor: 'silver'\r\n  },\r\n  lightbox: {\r\n    background: 'rgba(12, 12, 12, 0.93)',\r\n    iconColor: 'silver',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\r\n    textColor: 'silver'\r\n  }\r\n}\r\nconst defaultTheme = \"lightbox\";\r\n\r\nexport const AnimImage = (props) => {\r\n  const [backgroundColor, setBackgroundColor] = useState(props.backgroundColor ? props.backgroundColor : themes[defaultTheme].background);\r\n\r\n  const [iconColor, setIconColor] = useState(props.iconColor ? props.iconColor : themes[defaultTheme].iconColor);\r\n\r\n  const [fullScreen, setFullScreen] = useState(props.fullScreen ? props.fullScreen : false);\r\n\r\n  const [modalCloseOption, setModalCloseOption] = useState(props.modalClose ? props.modalClose : \"default\");\r\n\r\n  const [disableZoom, setDisableZoom] = useState(\r\n    props.disableImageZoom ? props.disableImageZoom : false\r\n  )\r\n\r\n  const [imageRoundedBorder, setImageRoundedBorder] = useState(\r\n    props.roundedImages ? props.roundedImages : false\r\n  )\r\n\r\n  const [displayFullScreenIcon, setDisplayFullScreenIcon] = useState(\r\n    props.showFullScreenIcon ? props.showFullScreenIcon : true\r\n  )\r\n\r\n  const [className, setClassName] = useState(\r\n    props.className ? props.className : \"\"\r\n  )\r\n\r\n  const [imgWrapperClass, setImgWrapperClass] = useState(\r\n    props.wrapperClassName ? props.wrapperClassName : \"\"\r\n  )\r\n\r\n  const [lightboxImgClassName, setLightboxImgClassName] = useState(\r\n    props.lightboxImgClass ? props.lightboxImgClass : \"\"\r\n  )\r\n  \r\n  const [imgClass, setImgClass] = useState(\r\n    props.className ? props.className : \"\"\r\n  )\r\n\r\n  const [displayMagnificationIcons, setDisplayMagnificationIcons] = useState(\r\n    props.showMagnificationIcons ? props.showMagnificationIcons : true\r\n  )\r\n\r\n  const [displayControls, setDisplayControls] = useState(\r\n    props.showControls ? props.showControls : true\r\n  )\r\n\r\n  const [showDownloadBtn, setShowDownloadBtn] = useState(\r\n    props.downloadImages ? props.downloadImages : false\r\n  )\r\n\r\n  const [isRTL, setIsRTL] = useState(props.rtl ? props.rtl : false)\r\n\r\n  const [lightboxIdentifier, setLightboxIdentifier] = useState(\r\n    props.lightboxIdentifier ? props.lightboxIdentifier : false\r\n  )\r\n\r\n  const [frameworkID, setFrameworkID] = useState(\r\n    props.framework ? props.framework : ''\r\n  )\r\n\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  // const [displayLoader, setDisplayLoader] = useState(\r\n  //   props.showLoader ? props.showLoader : false\r\n  // )\r\n\r\n  // const [textColor, setTextColor] = useState(\r\n  //   props.textColor ? props.textColor : themes[defaultTheme].textColor\r\n  // )\r\n\r\n\r\n  const [state, setState] = React.useState();\r\n\r\n  const initProps = () => {\r\n    if (props.showControls != undefined) {\r\n      setDisplayControls(props.showControls)\r\n      setDisableZoom(props.showControls)\r\n      \r\n      if (props.showControls == false) {\r\n          setDisplayMagnificationIcons(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        setBackgroundColor(themes[props.theme].background);\r\n        setIconColor(themes[props.theme].iconColor);\r\n      }\r\n    }\r\n\r\n    if (props.image && images.length == 0 && frameworkID == \"next\") {\r\n      let imgs: any = [];\r\n      imgs.push(props.image) \r\n      setImages(imgs);\r\n    }\r\n    else {\r\n      setImages(null)\r\n    }\r\n\r\n    return () => {\r\n    };\r\n\r\n  }, [state]);\r\n\r\n  const getImage = () => {\r\n    if (frameworkID == \"next\" && props.children != undefined) {\r\n      return props.children\r\n    }\r\n    else if (frameworkID != \"next\") {\r\n      return (\r\n        <img src={props.image.src} alt={props.image.title} className={`${className}`} />\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isMounted = true\r\n    if (isMounted) initProps()\r\n\r\n    return () => {\r\n      isMounted = false\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <SlideshowLightbox\r\n      showSlideshowIcon={false} \r\n      showThumbnails={false}\r\n      backgroundColor={backgroundColor} \r\n      iconColor={iconColor} \r\n      theme={props.theme} \r\n      lightboxIdentifier={lightboxIdentifier}\r\n      fullScreen={fullScreen} \r\n      showMagnificationIcons={displayMagnificationIcons}\r\n      showFullScreenIcon={displayFullScreenIcon} \r\n      downloadImages={showDownloadBtn}\r\n      roundedImages={imageRoundedBorder} \r\n      disableImageZoom={disableZoom}\r\n      showArrows={false} \r\n      showThumbnailIcon={false} \r\n      showControls={displayControls}\r\n      modalClose={modalCloseOption}\r\n      lightboxImgClass={lightboxImgClassName}\r\n      imgClassName={imgClass}\r\n      imageComponent={true}\r\n      framework={frameworkID}\r\n      // className={className}\r\n      imgWrapperClassName={imgWrapperClass}\r\n      images={images}>\r\n\r\n      {getImage()}\r\n    \r\n    </SlideshowLightbox>\r\n  );\r\n\r\n}","import * as React from 'react'\nimport { useState, useEffect, useRef } from 'react'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\nimport styles from './styles.module.css'\nimport axios from \"axios\";\nimport {\n  wrapNums,\n  getVideoHeight,\n  getVideoWidth,\n  shouldAutoplay,\n  openFullScreen,\n  closeFullScreen,\n} from './utility'\nimport {SlideshowLightbox} from \"./SlideshowLightbox\"\nimport {AnimImage} from \"./AnimImage\"\n\nexport const initLightboxJS = (licenseKey: string, plan_type: string) => {\n  var body = {\n    license_key: licenseKey,\n    plan_type: plan_type,\n  };\n\n  axios.post('https://lightboxjs-server.herokuapp.com/license', body)\n    .then(function (response) {\n\n      let licenseKeyValid = response.data.license_valid;\n\n      if (!licenseKeyValid) {\n        console.warn(\"Lightbox.js: Invalid license key specified, a valid license key must be provided.\")\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n};\n\n\nexport { SlideshowLightbox, AnimImage as Image }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}